{
  "meta": {
    "templateId": "ai-health-assistant-v1",
    "templateCreatedDate": "2024-01-15T00:00:00.000Z"
  },
  "name": "AI Medical Symptom Checker & Health Assistant",
  "tags": [],
  "nodes": [
    {
      "id": "disclaimer-note",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -900,
        -500
      ],
      "parameters": {
        "width": 400,
        "height": 460,
        "content": "## \ud83c\udfe5 AI HEALTH ASSISTANT\n\n**IMPORTANT DISCLAIMER:**\nThis tool provides general health information only and is NOT a substitute for professional medical advice, diagnosis, or treatment. Always consult qualified healthcare providers for medical concerns.\n\n### \u2728 Features:\n\u2022 Symptom analysis & information\n\u2022 General health guidance\n\u2022 Medicine reminders\n\u2022 Appointment scheduling hints\n\u2022 Emergency detection\n\u2022 Multi-language support\n\u2022 Privacy-first design\n\n### \ud83c\udfaf Use Cases:\n\u2022 Initial symptom research\n\u2022 Health education\n\u2022 Medication tracking\n\u2022 Wellness tips\n\u2022 Pre-appointment preparation"
      },
      "typeVersion": 1
    },
    {
      "id": "safety-protocols",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -500,
        -500
      ],
      "parameters": {
        "width": 320,
        "height": 400,
        "content": "## \u26a0\ufe0f SAFETY PROTOCOLS\n\n**Emergency Detection:**\n\u2022 Chest pain \u2192 Call 911\n\u2022 Breathing difficulty \u2192 Call 911\n\u2022 Stroke symptoms \u2192 Call 911\n\u2022 Severe bleeding \u2192 Call 911\n\u2022 Loss of consciousness \u2192 Call 911\n\n**Auto-Escalation:**\n\u2022 Detects emergency keywords\n\u2022 Provides emergency numbers\n\u2022 Refuses diagnosis\n\u2022 Recommends immediate care\n\n**Privacy:**\n\u2022 No data storage\n\u2022 Anonymous processing\n\u2022 HIPAA considerations\n\u2022 Encrypted transmission"
      },
      "typeVersion": 1
    },
    {
      "id": "symptom-categories",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -150,
        -500
      ],
      "parameters": {
        "width": 280,
        "height": 420,
        "content": "## \ud83d\udccb SYMPTOM CATEGORIES\n\n**Supported Areas:**\n\n**General:**\n\u2022 Fever & chills\n\u2022 Fatigue\n\u2022 Pain locations\n\u2022 Weight changes\n\n**Respiratory:**\n\u2022 Cough types\n\u2022 Breathing issues\n\u2022 Congestion\n\n**Digestive:**\n\u2022 Stomach pain\n\u2022 Nausea\n\u2022 Changes in habits\n\n**Mental Health:**\n\u2022 Stress levels\n\u2022 Sleep patterns\n\u2022 Mood changes\n\n**Skin:**\n\u2022 Rashes\n\u2022 Changes\n\u2022 Irritations"
      },
      "typeVersion": 1
    },
    {
      "id": "configuration",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -900,
        -50
      ],
      "parameters": {
        "width": 320,
        "height": 380,
        "content": "## \ud83d\udd27 CONFIGURATION\n\n**Required Setup:**\n- [ ] OpenAI API key\n- [ ] Emergency contacts database\n- [ ] Disclaimer acceptance\n- [ ] Language settings\n\n**Optional:**\n- [ ] Medical database API\n- [ ] Translation service\n- [ ] SMS notifications\n- [ ] Healthcare provider API\n- [ ] Appointment systems\n\n**Compliance:**\n\u2022 Review local regulations\n\u2022 Add required disclaimers\n\u2022 Implement data retention\n\u2022 Audit logging"
      },
      "typeVersion": 1
    },
    {
      "id": "example-interactions",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        200,
        -500
      ],
      "parameters": {
        "width": 350,
        "height": 400,
        "content": "## \ud83d\udcac EXAMPLE INTERACTIONS\n\n**User:** \"I have a headache for 3 days\"\n**Bot:** Provides general info about headaches, when to see doctor, self-care tips\n\n**User:** \"Chest pain can't breathe\"\n**Bot:** EMERGENCY - Call 911 immediately\n\n**User:** \"Remind me medications\"\n**Bot:** Sets up medication schedule\n\n**User:** \"Rash on arm, itchy\"\n**Bot:** General info about rashes, suggests pharmacist/doctor visit\n\n**User:** \"Feeling anxious lately\"\n**Bot:** Mental health resources, coping strategies, professional help info"
      },
      "typeVersion": 1
    },
    {
      "id": "roadmap",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        600,
        -500
      ],
      "parameters": {
        "width": 300,
        "height": 420,
        "content": "## \ud83d\udcca FEATURES ROADMAP\n\n**Current:**\n\u2705 Symptom information\n\u2705 Emergency detection\n\u2705 General guidance\n\u2705 Multi-language\n\n**Planned:**\n\ud83d\udd04 Medicine interactions\n\ud83d\udd04 Appointment booking\n\ud83d\udd04 Health tracking\n\ud83d\udd04 Family profiles\n\ud83d\udd04 Wearable integration\n\ud83d\udd04 Telemedicine prep\n\ud83d\udd04 Insurance info\n\ud83d\udd04 Prescription reminders\n\n**Future:**\n\ud83d\udd2e AI health predictions\n\ud83d\udd2e Personalized wellness\n\ud83d\udd2e Medical record analysis"
      },
      "typeVersion": 1
    },
    {
      "id": "webhook-entry",
      "name": "Health Query Webhook",
      "type": "n8n-nodes-base.webhook",
      "notes": "Receives health-related queries with strict privacy",
      "position": [
        -600,
        100
      ],
      "webhookId": "health-assistant",
      "parameters": {
        "path": "health-assistant",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "X-Content-Type-Options",
                "value": "nosniff"
              }
            ]
          }
        },
        "httpMethod": "POST",
        "responseMode": "responseNode"
      },
      "typeVersion": 1.1
    },
    {
      "id": "safety-check",
      "name": "Safety Check & Categorization",
      "type": "n8n-nodes-base.code",
      "notes": "Checks for emergencies and categorizes queries",
      "position": [
        -400,
        100
      ],
      "parameters": {
        "jsCode": "// Emergency keywords that trigger immediate response\nconst emergencyKeywords = [\n    'chest pain', 'heart attack', 'stroke', 'can\\'t breathe', 'breathing difficulty',\n    'unconscious', 'severe bleeding', 'suicide', 'overdose', 'poisoning',\n    'severe pain', 'allergic reaction', 'anaphylaxis', 'seizure'\n];\n\n// Extract user input\nconst userInput = $input.first().json.body?.query || $input.first().json.query || '';\nconst language = $input.first().json.body?.language || 'en';\nconst age = $input.first().json.body?.age || 'unknown';\nconst sessionId = $input.first().json.body?.sessionId || Math.random().toString(36).substring(7);\n\n// Check for emergency\nconst lowerInput = userInput.toLowerCase();\nconst isEmergency = emergencyKeywords.some(keyword => lowerInput.includes(keyword));\n\n// Categorize query type\nlet queryType = 'general';\nif (lowerInput.includes('symptom') || lowerInput.includes('pain') || lowerInput.includes('feel')) {\n    queryType = 'symptom';\n} else if (lowerInput.includes('medication') || lowerInput.includes('medicine') || lowerInput.includes('drug')) {\n    queryType = 'medication';\n} else if (lowerInput.includes('appointment') || lowerInput.includes('doctor') || lowerInput.includes('schedule')) {\n    queryType = 'appointment';\n} else if (lowerInput.includes('wellness') || lowerInput.includes('health tip') || lowerInput.includes('prevent')) {\n    queryType = 'wellness';\n}\n\n// Privacy notice\nconst privacyNotice = \"This conversation is not stored and is for informational purposes only.\";\n\n// Prepare output\nreturn {\n    userInput,\n    language,\n    age,\n    sessionId,\n    isEmergency,\n    queryType,\n    privacyNotice,\n    timestamp: new Date().toISOString(),\n    disclaimer: \"This is not medical advice. Consult healthcare professionals for medical concerns.\"\n};"
      },
      "typeVersion": 2
    },
    {
      "id": "emergency-router",
      "name": "Emergency Router",
      "type": "n8n-nodes-base.if",
      "position": [
        -200,
        100
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": false,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "c5528e99-6c2d-469e-aec6-ad5b07d5c8f1",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.isEmergency }}",
              "rightValue": true
            }
          ]
        }
      },
      "typeVersion": 2
    },
    {
      "id": "emergency-response",
      "name": "Emergency Response",
      "type": "n8n-nodes-base.set",
      "notes": "Immediate emergency response with contact numbers",
      "position": [
        0,
        0
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "emergency",
              "name": "response",
              "type": "string",
              "value": "=\ud83d\udea8 EMERGENCY DETECTED \ud83d\udea8\n\n**CALL EMERGENCY SERVICES IMMEDIATELY:**\n\n\ud83c\uddfa\ud83c\uddf8 USA: 911\n\ud83c\uddec\ud83c\udde7 UK: 999\n\ud83c\uddea\ud83c\uddfa EU: 112\n\ud83c\udde6\ud83c\uddfa Australia: 000\n\n**Your message suggests a medical emergency.**\n\nWhile waiting for help:\n1. Stay calm\n2. Don't drive yourself\n3. Unlock doors for paramedics\n4. Have medications list ready\n5. Call someone to be with you\n\n**This is an automated response. Get immediate medical help!**"
            },
            {
              "id": "type",
              "name": "responseType",
              "type": "string",
              "value": "emergency"
            },
            {
              "id": "severity",
              "name": "severity",
              "type": "string",
              "value": "critical"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "health-ai",
      "name": "Health Information AI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "notes": "Provides general health information with strict guidelines",
      "position": [
        0,
        200
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4-mini"
        },
        "options": {
          "maxTokens": 1000,
          "temperature": 0.3
        },
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "=You are a helpful health information assistant. You provide general health information and wellness guidance while being very careful to:\n\n1. NEVER diagnose conditions\n2. NEVER prescribe medications\n3. NEVER replace professional medical advice\n4. ALWAYS recommend consulting healthcare providers for medical concerns\n5. ALWAYS emphasize this is general information only\n\nYour responses should be:\n- Informative but cautious\n- Empathetic and supportive\n- Clear about limitations\n- Focused on general wellness\n- Encouraging professional consultation\n\nFor symptom queries:\n- Provide general information about possible causes\n- Suggest when to see a doctor\n- Offer comfort measures if appropriate\n- Never minimize serious symptoms\n\nFor medication queries:\n- Only provide general information\n- Emphasize consulting pharmacists/doctors\n- Never suggest specific dosages\n- Mention common side effects only generally\n\nAlways end with a disclaimer about seeking professional medical advice."
            },
            {
              "role": "user",
              "content": "={{ $json.userInput }}\n\nContext:\n- Query Type: {{ $json.queryType }}\n- Language: {{ $json.language }}\n- Age Group: {{ $json.age }}\n\nPlease provide helpful general health information while being clear this is not medical advice."
            }
          ]
        }
      },
      "credentials": {
        "openAiApi": {
          "id": "{{YOUR_OPENAI_CREDENTIAL}}",
          "name": "OpenAI account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "format-health-response",
      "name": "Format Health Response",
      "type": "n8n-nodes-base.set",
      "notes": "Adds disclaimers and resources to response",
      "position": [
        200,
        200
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "3d0292bc-0e07-4b55-9b7f-be0b417c2e05",
              "name": "response",
              "type": "string",
              "value": "={{ $json.message.content }}"
            },
            {
              "id": "e4e66a7a-1776-465b-865f-76666c5e3584",
              "name": "responseType",
              "type": "string",
              "value": "={{ $('Safety Check & Categorization').item.json.queryType }}"
            },
            {
              "id": "b2346867-40bb-4321-a3bd-59b948036dca",
              "name": "disclaimer",
              "type": "string",
              "value": "=\u2695\ufe0f **Important Medical Disclaimer:**\nThis information is for educational purposes only and is not a substitute for professional medical advice, diagnosis, or treatment. Always seek the advice of your physician or other qualified health provider with any questions you may have regarding a medical condition."
            },
            {
              "id": "8f30e7de-3dcb-412f-bcd8-d8bbfff087fb",
              "name": "resources",
              "type": "string",
              "value": "=\ud83d\udcde **Health Resources:**\n\u2022 Find a doctor: https://doctor.webmd.com/\n\u2022 Symptom checker: https://www.mayoclinic.org/symptom-checker/\n\u2022 Mental health: https://www.samhsa.gov/find-help/national-helpline\n\u2022 Poison control: 1-800-222-1222 (US)"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "merge-responses",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        400,
        100
      ],
      "parameters": {
        "mode": "combine",
        "options": {},
        "combinationMode": "multiplex"
      },
      "typeVersion": 3
    },
    {
      "id": "compile-response",
      "name": "Compile Final Response",
      "type": "n8n-nodes-base.code",
      "notes": "Creates structured response with all necessary information",
      "position": [
        600,
        100
      ],
      "parameters": {
        "jsCode": "// Compile final response\nconst input = $('Safety Check & Categorization').item.json;\nconst response = $input.first().json;\n\n// Build structured response\nconst output = {\n    success: true,\n    sessionId: input.sessionId,\n    timestamp: new Date().toISOString(),\n    query: {\n        original: input.userInput,\n        type: input.queryType,\n        isEmergency: input.isEmergency,\n        language: input.language\n    },\n    response: {\n        content: response.response,\n        type: response.responseType,\n        severity: response.severity || 'normal'\n    },\n    disclaimers: {\n        medical: response.disclaimer || input.disclaimer,\n        privacy: input.privacyNotice\n    },\n    resources: response.resources || null,\n    followUp: {\n        suggestedActions: getSuggestedActions(input.queryType, input.isEmergency),\n        nextSteps: getNextSteps(input.queryType)\n    }\n};\n\n// Helper functions\nfunction getSuggestedActions(queryType, isEmergency) {\n    if (isEmergency) return ['Call emergency services', 'Get immediate help'];\n    \n    const actions = {\n        symptom: ['Track symptoms', 'Schedule doctor visit', 'Rest and monitor'],\n        medication: ['Consult pharmacist', 'Read medication guide', 'Set reminders'],\n        appointment: ['Call your provider', 'Prepare questions', 'Gather medical history'],\n        wellness: ['Start healthy habits', 'Track progress', 'Set wellness goals'],\n        general: ['Consult healthcare provider', 'Learn more', 'Stay informed']\n    };\n    \n    return actions[queryType] || actions.general;\n}\n\nfunction getNextSteps(queryType) {\n    const steps = {\n        symptom: 'If symptoms persist or worsen, see a healthcare provider promptly.',\n        medication: 'Always follow prescription instructions and consult your pharmacist.',\n        appointment: 'Write down your concerns to discuss with your provider.',\n        wellness: 'Small daily changes can lead to significant health improvements.',\n        general: 'Your health is important - don\\'t hesitate to seek professional help.'\n    };\n    \n    return steps[queryType] || steps.general;\n}\n\nreturn output;"
      },
      "typeVersion": 2
    },
    {
      "id": "send-response",
      "name": "Send Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "notes": "Returns health information with appropriate headers",
      "position": [
        800,
        100
      ],
      "parameters": {
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              },
              {
                "name": "X-Health-Disclaimer",
                "value": "This is not medical advice"
              }
            ]
          }
        },
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify($json, null, 2) }}"
      },
      "typeVersion": 1.1
    },
    {
      "id": "integration-options",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        600,
        -50
      ],
      "parameters": {
        "width": 300,
        "height": 400,
        "content": "## \ud83d\udcf1 INTEGRATION OPTIONS\n\n**Channels:**\n\u2022 Web chat widget\n\u2022 WhatsApp Business\n\u2022 Telegram bot\n\u2022 SMS gateway\n\u2022 Voice assistants\n\u2022 Mobile apps\n\n**Healthcare Systems:**\n\u2022 EHR integration\n\u2022 Appointment APIs\n\u2022 Pharmacy systems\n\u2022 Insurance verification\n\u2022 Telemedicine platforms\n\n**Data Sources:**\n\u2022 Medical databases\n\u2022 Drug interaction APIs\n\u2022 Symptom databases\n\u2022 Provider directories"
      },
      "typeVersion": 1
    },
    {
      "id": "audit-log",
      "name": "Audit Log (Optional)",
      "type": "n8n-nodes-base.airtable",
      "notes": "Optional: Log queries for compliance (configure data retention)",
      "disabled": true,
      "position": [
        400,
        300
      ],
      "parameters": {
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "session_id",
              "fieldValue": "={{ $('Safety Check & Categorization').item.json.sessionId }}"
            },
            {
              "fieldId": "query_type",
              "fieldValue": "={{ $('Safety Check & Categorization').item.json.queryType }}"
            },
            {
              "fieldId": "is_emergency",
              "fieldValue": "={{ $('Safety Check & Categorization').item.json.isEmergency }}"
            },
            {
              "fieldId": "timestamp",
              "fieldValue": "={{ $('Safety Check & Categorization').item.json.timestamp }}"
            }
          ]
        },
        "resource": "database",
        "operation": "create",
        "databaseId": {
          "__rl": true,
          "mode": "list",
          "value": "health-assistant-logs"
        }
      },
      "typeVersion": 2
    }
  ],
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "connections": {
    "Merge": {
      "main": [
        [
          {
            "node": "Compile Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Emergency Router": {
      "main": [
        [
          {
            "node": "Emergency Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Health Information AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Emergency Response": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Health Query Webhook": {
      "main": [
        [
          {
            "node": "Safety Check & Categorization",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Health Information AI": {
      "main": [
        [
          {
            "node": "Format Health Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compile Final Response": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Health Response": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Audit Log (Optional)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Safety Check & Categorization": {
      "main": [
        [
          {
            "node": "Emergency Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Medical Symptom Checker & Health Assistant with GPT-4-mini",
    "used_count": 66,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/5920",
    "scraped_at": "2025-08-17 15:42:36"
  }
}