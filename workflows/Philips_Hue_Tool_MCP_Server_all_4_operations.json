{
  "meta": {
    "instanceId": "cd59eaaeb7b34d06e24511380db94cdb7fbce6037cc4de22e539c5158ab9cdfc"
  },
  "nodes": [
    {
      "id": "8da548a8-0019-4772-ae3e-cd683fc51b92",
      "name": "Workflow Overview 0",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1460,
        -100
      ],
      "parameters": {
        "width": 420,
        "height": 780,
        "content": "## \ud83d\udee0\ufe0f Philips Hue Tool MCP Server\n\n### \ud83d\udccb Available Operations (4 total)\n\n**Light**: delete, get, get all, update\n\n### \u2699\ufe0f Setup Instructions\n\n1. **Import Workflow**: Load this workflow into your n8n instance\n\n1. **\ud83d\udd11 Add Credentials**: Configure Philips Hue Tool authentication in one tool node then open and close all others.\n2. **\ud83d\ude80 Activate**: Enable this workflow to start your MCP server\n3. **\ud83d\udd17 Get URL**: Copy webhook URL from MCP trigger (right side)\n4. **\ud83e\udd16 Connect**: Use MCP URL in your AI agent configurations\n\n### \u2728 Ready-to-Use Features\n\n\u2022 Zero configuration - all 4 operations pre-built\n\u2022 AI agents automatically populate parameters via `$fromAI()` expressions\n\u2022 Every resource and operation combination available\n\u2022 Native n8n error handling and response formatting\n\u2022 Modify parameter defaults in any tool node as needed\n\n### \ud83d\udcac Need Help?\nCheck the [n8n documentation](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolmcp/) or ping me on [discord](https://discord.me/cfomodz) for MCP integration guidance or customizations."
      },
      "typeVersion": 1
    },
    {
      "id": "6decb43d-8234-4229-a507-e787a8a592de",
      "name": "Philips Hue Tool MCP Server",
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "position": [
        -400,
        -100
      ],
      "webhookId": "c79462f0-bdd6-4cf3-9200-baf8859ca75d",
      "parameters": {
        "path": "philips-hue-tool-mcp"
      },
      "typeVersion": 1
    },
    {
      "id": "3ae6f35d-70d3-4276-98f4-2ba9415332ec",
      "name": "Delete a light",
      "type": "n8n-nodes-base.philipsHueTool",
      "position": [
        -800,
        140
      ],
      "parameters": {
        "lightId": "={{ $fromAI('Light_Id', ``, 'string') }}",
        "operation": "delete"
      },
      "credentials": {},
      "typeVersion": 1
    },
    {
      "id": "83c742ca-bd39-4fc9-8eab-173362d29c46",
      "name": "Get a light",
      "type": "n8n-nodes-base.philipsHueTool",
      "position": [
        -580,
        140
      ],
      "parameters": {
        "lightId": "={{ $fromAI('Light_Id', ``, 'string') }}",
        "operation": "get"
      },
      "credentials": {},
      "typeVersion": 1
    },
    {
      "id": "bada9604-ea6f-4242-a560-39cb5565899c",
      "name": "Get many lights",
      "type": "n8n-nodes-base.philipsHueTool",
      "position": [
        -360,
        140
      ],
      "parameters": {
        "limit": "={{ $fromAI('Limit', ``, 'number') }}",
        "operation": "getAll",
        "returnAll": "={{ $fromAI('Return_All', ``, 'boolean') }}"
      },
      "credentials": {},
      "typeVersion": 1
    },
    {
      "id": "84eaa6c9-f334-485f-a4f2-e6d4fa982d5a",
      "name": "Update a light",
      "type": "n8n-nodes-base.philipsHueTool",
      "position": [
        -140,
        140
      ],
      "parameters": {
        "on": "={{ $fromAI('On', ``, 'boolean') }}",
        "lightId": "={{ $fromAI('Light_Id', ``, 'string') }}",
        "additionalFields": {}
      },
      "credentials": {},
      "typeVersion": 1
    },
    {
      "id": "3d3fcd54-2a74-42f0-b5fb-794bafe2a997",
      "name": "Sticky Note 1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        120
      ],
      "parameters": {
        "color": 4,
        "width": 1060,
        "content": "## Light"
      },
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Get a light": {
      "ai_tool": [
        [
          {
            "node": "Philips Hue Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete a light": {
      "ai_tool": [
        [
          {
            "node": "Philips Hue Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update a light": {
      "ai_tool": [
        [
          {
            "node": "Philips Hue Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many lights": {
      "ai_tool": [
        [
          {
            "node": "Philips Hue Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Philips Hue Tool MCP Server  all 4 operations",
    "used_count": 2,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/5095",
    "scraped_at": "2025-08-17 18:55:11"
  }
}