{
  "id": "6nPKaWcXqc2YPy87",
  "meta": {
    "instanceId": "98986c4dc0b4b2af9fd0666d254f8b80e6e6b2044e2f3f3eedc76242999f4b5e"
  },
  "name": "VECTORIZE TUSS TABLE",
  "tags": [],
  "nodes": [
    {
      "id": "c3de0ca4-e8e7-4e27-93a3-82cf65c0153f",
      "name": "Postgres PGVector Store2",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "onError": "continueRegularOutput",
      "position": [
        1216,
        256
      ],
      "parameters": {
        "mode": "insert",
        "options": {},
        "tableName": "{your_table_name_here}"
      },
      "credentials": {
        "postgres": {
          "id": "3oR16F8lBunP3CQN",
          "name": "N8N"
        }
      },
      "typeVersion": 1.1,
      "alwaysOutputData": true
    },
    {
      "id": "ed23ae91-a574-4573-a4b6-77d05a927985",
      "name": "Token Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "position": [
        1504,
        704
      ],
      "parameters": {
        "chunkSize": 100
      },
      "typeVersion": 1
    },
    {
      "id": "85128969-3eaf-4d79-adce-cf7791c26f7a",
      "name": "Embeddings Google Gemini",
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "position": [
        1056,
        448
      ],
      "parameters": {},
      "credentials": {
        "googlePalmApi": {
          "id": "gVMH2T1624AUVtgA",
          "name": "GEMINI - PRODU\u00c7\u00c3O"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "4fccff60-abd4-423d-971e-fed9f14cce18",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "parameters": {
        "width": 432,
        "height": 208,
        "content": "## DATABASE AND/OR FILE CONNECTION\n\n### HERE YOU SHOULD PROVIDE THE TUSS TABLE, WITH ONE COLUMN NAMED CD_ITEM AND ANOTHER NAMED DS_ITEM\n"
      },
      "typeVersion": 1
    },
    {
      "id": "104c2ec3-9ad4-4cd0-851f-be002e7b5a13",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1200,
        48
      ],
      "parameters": {
        "width": 352,
        "content": "## VECTORIZATION\n\nHERE THE VECTORIZATION WILL BE PERFORMED IN A POSTGRES DATABASE USING PGVECTOR\n"
      },
      "typeVersion": 1
    },
    {
      "id": "ac59dec8-36c6-473d-8622-a6c9e6dddfa9",
      "name": "VECTORIZE TUSS TABLE",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -176,
        240
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "c9f12d90-9b9f-42fb-8519-6367b4ce11e2",
      "name": "ORACLE DATABASE CONNECTION",
      "type": "n8n-nodes-oracle-database-parameterization.Oracle Database with Parameterization",
      "position": [
        176,
        240
      ],
      "parameters": {
        "query": "SELECT CD_ITEM, DS_ITEM FROM {sua tabela aqui }"
      },
      "credentials": {
        "oracleCredentials": {
          "id": "Dj4SbJh38O9fJ7kg",
          "name": "PROTHEUS - PRODU\u00c7\u00c3O (APPN8N)"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "ad808bb8-02ef-4075-be77-17512b144cb8",
      "name": "COLLECTION OF MEDICAL PROCEDURES",
      "type": "n8n-nodes-base.code",
      "position": [
        464,
        240
      ],
      "parameters": {
        "jsCode": "return $input.first().json.rows;"
      },
      "typeVersion": 2
    },
    {
      "id": "936a7ab6-7149-4a3e-ad7b-6bc12670df31",
      "name": "FOR - MEDICAL PROCEDURES",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        816,
        32
      ],
      "parameters": {
        "options": {}
      },
      "executeOnce": false,
      "typeVersion": 3,
      "alwaysOutputData": false
    },
    {
      "id": "1c1f20ee-d3e5-4015-b428-bff52abf9361",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1616,
        480
      ],
      "parameters": {
        "width": 352,
        "height": 224,
        "content": "## DATA LOADER\n\nResponsible for preparing and formatting the textual data before vectorization, ensuring that each piece of information has the correct structure and metadata\u2014such as the medical procedure code and its description\u2014to generate precise and useful vectors for semantic search.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "07b91604-696c-467e-a9ba-0046f9a76761",
      "name": "Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        1328,
        496
      ],
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "cd_item",
                "value": "={{ $json.cd_item }}"
              },
              {
                "name": "procedureName",
                "value": "={{ $json.ds_item }}"
              }
            ]
          }
        },
        "jsonData": "=Medical procedure code: {{ $json.cd_item }}\nMedical procedure description: {{ $json.ds_item }}",
        "jsonMode": "expressionData"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d1a6766c-bc43-46c9-9581-ca5c86ca300f",
  "connections": {
    "Data Loader": {
      "ai_document": [
        [
          {
            "node": "Postgres PGVector Store2",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "VECTORIZE TUSS TABLE": {
      "main": [
        [
          {
            "node": "ORACLE DATABASE CONNECTION",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "Postgres PGVector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "FOR - MEDICAL PROCEDURES": {
      "main": [
        [],
        [
          {
            "node": "Postgres PGVector Store2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres PGVector Store2": {
      "main": [
        [
          {
            "node": "FOR - MEDICAL PROCEDURES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ORACLE DATABASE CONNECTION": {
      "main": [
        [
          {
            "node": "COLLECTION OF MEDICAL PROCEDURES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "COLLECTION OF MEDICAL PROCEDURES": {
      "main": [
        [
          {
            "node": "FOR - MEDICAL PROCEDURES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Vectorize Medical Procedures for Semantic Search with TUSS, Gemini & pgVector",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/6543",
    "scraped_at": "2025-08-21 04:18:06",
    "workflow_id": "e69337d2-ff34-50f1-96fc-57c830460165"
  },
  "_filename": "Vectorize_Medical_Procedures_for_Semantic_Search_with_TUSS_Gemini_pgVector.json"
}