{
  "meta": {
    "instanceId": "b01651a347630e90a4bc33ea9cf043eb9b1a7593a0e49cd5542c1c0d34c726d2",
    "templateCredsSetupCompleted": true
  },
  "nodes": [
    {
      "id": "83497222-5524-4f63-9e45-b1bfe3397de1",
      "name": "Telegram Input",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -1680,
        -60
      ],
      "webhookId": "ec3858d1-90bb-47c3-9012-858bdf043eda",
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "typeVersion": 1.1
    },
    {
      "id": "743ec068-df01-4bcb-89a4-499da2de1c58",
      "name": "Adds SessionId",
      "type": "n8n-nodes-base.set",
      "position": [
        -1500,
        -60
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "b5c25cd4-226b-4778-863f-79b13b4a5202",
              "name": "sessionId",
              "type": "string",
              "value": "={{ $json.message.chat.id }}"
            }
          ]
        },
        "includeOtherFields": true
      },
      "typeVersion": 3.4
    },
    {
      "id": "9bbb8ed4-2458-4072-98bc-ccde13b80af0",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        -1320,
        -60
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "outputKey": "voice",
              "conditions": {
                "combinator": "and",
                "conditions": [
                  {
                    "id": "a2869917-6c2d-4fe6-b3bb-68fb1f4447f8",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true
            },
            {
              "outputKey": "text",
              "conditions": {
                "combinator": "and",
                "conditions": [
                  {
                    "id": "ba8aa838-8f6e-41dc-ab08-d44b444b3c5d",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2,
      "alwaysOutputData": false
    },
    {
      "id": "a5e0c4a8-041e-4252-8a77-7f090e565a5c",
      "name": "Get Voice File",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1120,
        -160
      ],
      "webhookId": "1c4105d0-21d7-4838-a3ff-3d8c5f53431a",
      "parameters": {
        "fileId": "={{ $json.message.voice.file_id }}",
        "resource": "file"
      },
      "typeVersion": 1.1
    },
    {
      "id": "3fe6c7c4-28ee-4bdb-9db6-67fd4b486b64",
      "name": "Transcribe ElevenLabs",
      "type": "@elevenlabs/n8n-nodes-elevenlabs.elevenLabs",
      "position": [
        -980,
        -160
      ],
      "parameters": {
        "resource": "speech",
        "operation": "speechToText",
        "requestOptions": {},
        "additionalOptions": {}
      },
      "typeVersion": 1
    },
    {
      "id": "c8520675-e456-4ac6-9959-81068c371bd4",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "position": [
        -840,
        -160
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "069636d6-2929-4044-8174-905689ef726d",
              "name": "message.text",
              "type": "string",
              "value": "={{ $json.text }}"
            },
            {
              "id": "721a7962-d198-485f-8c9f-3e962d83db5f",
              "name": "sessionId",
              "type": "string",
              "value": "={{ $('Switch').item.json.sessionId }}"
            },
            {
              "id": "0f39588e-55eb-4bf3-9150-456c6597100c",
              "name": "voice",
              "type": "boolean",
              "value": true
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "3eb68b11-1cca-4d03-ba1a-8f4e81199148",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        -620,
        -60
      ],
      "parameters": {
        "options": {},
        "aggregate": "aggregateAllItemData"
      },
      "typeVersion": 1
    },
    {
      "id": "5f477900-a311-4b6e-ba2c-7a5460937978",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        -720,
        200
      ],
      "parameters": {
        "options": {},
        "modelName": "models/gemini-2.5-flash"
      },
      "typeVersion": 1
    },
    {
      "id": "4948f23a-ddde-4973-963c-cfe1aec5119a",
      "name": "Groq Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "position": [
        -560,
        200
      ],
      "parameters": {
        "model": "deepseek-r1-distill-llama-70b",
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "dddd3d08-b63c-4a64-9def-e694ca2efd47",
      "name": "Voice Assistant",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -420,
        -60
      ],
      "parameters": {
        "text": "={{ $json.data[0].message.text }}",
        "options": {
          "systemMessage": "You are the woman **CoinMarketCap AI Data Analyst**, a powerful, multi-source crypto intelligence system that integrates three specialized agents..."
        },
        "promptType": "define"
      },
      "typeVersion": 1.7
    },
    {
      "id": "b459ce91-2261-4fc4-8cc0-8e39d2093512",
      "name": "If voice",
      "type": "n8n-nodes-base.if",
      "position": [
        -60,
        -60
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "combinator": "and",
          "conditions": [
            {
              "id": "290be484-45fd-497f-917e-00df36476bf2",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $('Aggregate').item.json.data[0].voice }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "73d99c4c-c968-44ef-9196-94e5b372051c",
      "name": "ElevenLabs",
      "type": "@elevenlabs/n8n-nodes-elevenlabs.elevenLabs",
      "position": [
        160,
        -160
      ],
      "parameters": {
        "text": "={{ $('Voice Assistant').item.json.output }}",
        "voice": {
          "mode": "list",
          "value": "9BWtsMINqrJLrRacOk9x",
          "cachedResultName": "Aria"
        },
        "resource": "speech",
        "requestOptions": {},
        "additionalOptions": {
          "model": {
            "mode": "list",
            "value": "eleven_multilingual_v2"
          },
          "languageCode": "={{ $('Telegram Input').item.json.message.from.language_code }}",
          "outputFormat": "opus_48000_64"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "4b661df9-08fc-498f-ae5f-945956120287",
      "name": "Telegram Send Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        160,
        20
      ],
      "webhookId": "fe51631a-9bde-41e5-a12c-357f00377dd7",
      "parameters": {
        "text": "={{ $json.output }}",
        "chatId": "={{ $('Telegram Input').item.json.message.chat.id }}",
        "additionalFields": {}
      },
      "typeVersion": 1
    },
    {
      "id": "b68da635-54b8-4c42-8c72-2b12cc805b12",
      "name": "Telegram send voice message",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        380,
        -160
      ],
      "parameters": {
        "url": "https://api.telegram.org/bot{{$credentials.telegramToken}}/sendVoice",
        "method": "POST",
        "options": {},
        "sendBody": true,
        "contentType": "multipart-form-data",
        "sendHeaders": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $('Telegram Input').item.json.message.chat.id }}"
            },
            {
              "name": "voice",
              "parameterType": "formBinaryData",
              "inputDataFieldName": "data"
            }
          ]
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "multipart/form-data"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "420ec75a-87e4-4d29-b4b7-81299cc42760",
      "name": "Voice Assistant Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        -420,
        200
      ],
      "parameters": {
        "sessionKey": "={{ $json.data[0].sessionId }}",
        "sessionIdType": "customKey"
      },
      "typeVersion": 1.3
    },
    {
      "id": "73674764-4bfd-4fc1-91ad-42ad03aae79d",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -440,
        -300
      ],
      "parameters": {
        "width": 300,
        "height": 180,
        "content": "**Auto-language detection**:  \n- Uses `message.from.language_code` (e.g., \"ru\", \"es\")  \n- Ensure ElevenLabs model = `eleven_multilingual_v2`  \n- Override with `languageCode` in TTS node if needed  "
      },
      "typeVersion": 1
    },
    {
      "id": "6a439698-ca32-4188-a6ba-ac427cf995eb",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1400,
        120
      ],
      "parameters": {
        "width": 300,
        "height": 300,
        "content": "\ud83c\udf99\ufe0f Voice/Text Routing Logic\n\n**How messages are processed:**\n\n- **Voice Message Path:**\n  1. Get voice file \u2192 ElevenLabs STT \u2192 Set `voice=true` flag\n  2. AI processes text \u2192 ElevenLabs TTS \u2192 Send voice reply\n\n- **Text Message Path:**\n  1. Bypass STT/TTS \u2192 Direct to AI\n  2. Send text reply\n\n*Switch node uses:*\n`={{ $json.message.text }}` empty check"
      },
      "typeVersion": 1
    },
    {
      "id": "d12487ce-023d-468d-9204-ebf4d86df3d8",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -280,
        140
      ],
      "parameters": {
        "width": 380,
        "height": 440,
        "content": "## \ud83d\udee0\ufe0f Custom Tools Integration\n\n**To add your own tools:**\n1. Edit `systemMessage` in Voice Assistant node\n2. Add tool descriptions in format:\n```python\nTool(\n    name=\\\"YourTool\\\",\n    func=tool_function,\n    description=\\\"What it does\\\"\n)\n```\n\n**Example tools:**\n- Database queries\n- API integrations\n- Math/code executors\n\n*Connect required nodes to fetch data"
      },
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "Get Voice File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If voice": {
      "main": [
        [
          {
            "node": "ElevenLabs",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram Send Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Voice Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ElevenLabs": {
      "main": [
        [
          {
            "node": "Telegram send voice message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adds SessionId": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Voice File": {
      "main": [
        [
          {
            "node": "Transcribe ElevenLabs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Voice Assistant": {
      "main": [
        [
          {
            "node": "If voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe ElevenLabs": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Voice Assistant Memory": {
      "ai_memory": [
        [
          {
            "node": "Voice Assistant",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Voice Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Multilingual Voice & Text Telegram Bot with ElevenLabs TTS and LangChain Agents",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/5511",
    "scraped_at": "2025-08-21 01:36:41",
    "workflow_id": "0876c234-f483-5bc6-889b-247ba2b9c8ae"
  },
  "_filename": "Multilingual_Voice_Text_Telegram_Bot_with_ElevenLabs_TTS_and_LangChain_Agents.json"
}