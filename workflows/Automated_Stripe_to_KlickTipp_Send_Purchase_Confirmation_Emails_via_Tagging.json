{
  "meta": {
    "instanceId": "95b3ab5a70ab1c8c1906357a367f1b236ef12a1409406fd992f60255f0f95f85",
    "templateCredsSetupCompleted": true
  },
  "nodes": [
    {
      "id": "f53d9572-2100-4dbb-83af-6a663bc9ecbb",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -760,
        -380
      ],
      "parameters": {
        "color": 4,
        "width": 860,
        "height": 440,
        "content": "## Data reception & collection via Webhook & HTTP Requests"
      },
      "typeVersion": 1
    },
    {
      "id": "51b80673-c272-4c2c-8fc3-969fe4a0cc6a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        -380
      ],
      "parameters": {
        "width": 320,
        "height": 440,
        "content": "## Writing checkout data into contact record"
      },
      "typeVersion": 1
    },
    {
      "id": "e19bea0c-f8d7-49f2-8b6f-a13bed1c465d",
      "name": "Subscribe buyer to KlickTipp",
      "type": "CUSTOM.klicktipp",
      "notes": "Subscribes the buyer to the KlickTipp list using their payment data.",
      "position": [
        200,
        -180
      ],
      "parameters": {
        "email": "={{ $json.billing_details.email }}",
        "tagId": "13201265",
        "fields": {
          "dataFields": [
            {
              "fieldId": "field219541",
              "fieldValue": "={{ $json.amount }}"
            },
            {
              "fieldId": "field220266",
              "fieldValue": "={{ $json.receipt_url }}"
            },
            {
              "fieldId": "field219542",
              "fieldValue": "={{ $('New checkout session completed').item.json.data.object.id }}"
            },
            {
              "fieldId": "fieldFirstName",
              "fieldValue": "={{ \n  // Access the full name string from the JSON input\n  $json.billing_details.name\n  \n  // Remove any leading/trailing whitespace\n  ?.trim()\n  \n  // Split the name string into an array using one or more whitespace characters (handles multiple spaces)\n  .split(/\\s+/)\n  \n  // Select the first word from the array (typically the first name)\n  [0] \n}}\n"
            },
            {
              "fieldId": "fieldLastName",
              "fieldValue": "={{ \n  // Access the full name from the input JSON\n  $json.billing_details.name\n\n  // Remove any leading/trailing whitespace\n  ?.trim()\n\n  // Split the string into an array of words using any whitespace\n  .split(/\\s+/)\n\n  // Get the last word in the array \u2014 typically the last name\n  .at(-1) \n}}"
            },
            {
              "fieldId": "field219540",
              "fieldValue": "={{ $('Getting line items').item.json.data.map(item => item.description) }}\n"
            }
          ]
        },
        "listId": "358895",
        "resource": "subscriber",
        "operation": "subscribe"
      },
      "credentials": {
        "klickTippApi": {
          "id": "K9JyBdCM4SZc1cXl",
          "name": "DEMO KlickTipp account"
        }
      },
      "notesInFlow": true,
      "typeVersion": 2
    },
    {
      "id": "6a72557d-32df-4928-8816-6eddbc0f45ba",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -680,
        80
      ],
      "parameters": {
        "color": 7,
        "width": 980,
        "height": 1600,
        "content": "### Introduction\nThis workflow automates Stripe checkout confirmations by capturing transaction data and syncing it into KlickTipp. Upon successful checkout, the contact's data is enriched with purchase details and tagged to trigger a personalized confirmation campaign in KlickTipp. Perfect for digital product sellers, course creators, and service providers seeking an end-to-end automated sales confirmation process.\n\n### Benefits\n- **Instant confirmation emails**: Automatically notify customers upon successful checkout\u2014no manual processing needed.\n- **Structured contact data**: Order data (invoice link, amount, transaction ID, products) is stored in KlickTipp custom fields.\n- **Smart campaign triggering**: Assign dynamic tags to start automated confirmation or fulfillment sequences.\n- **Seamless digital delivery**: Ideal for pairing with tools like Memberspot or Mentortools to unlock digital products post-checkout.\n\n### Key Features\n- **Stripe Webhook Trigger**:\n  - Triggers on `Checkout Session.completed` events.\n  - Captures checkout data including product names, order number, and total amount.\n\n- **KlickTipp Contact Sync**:\n  - Adds or updates contacts in KlickTipp.\n  - Maps Stripe data into custom fields\n  - Assigns a tag such as `Stripe Checkout` to initiate a confirmation campaign.\n\n- **Router Logic (optional)**:\n  - Branches logic based on product ID or Stripe payment link.\n  - Enables product-specific campaigns or follow-ups.\n\n### Setup Instructions\n1. **KlickTipp Preparation**\n   - Create the following custom fields in your KlickTipp account:\n     - `Stripe_Beleg_URL` (URL)\n     - `Stripe_Gesamtbetrag` (Decimal)\n     - `Stripe_Zahlungs_ID` (Single Line)\n     - `Stripe_Produkte` (Single Line)\n   - Define a tag for each product or confirmation flow, e.g., `Bestellung: Kurs XYZ`.\n\n2. **Credential Configuration**\n     - Connect your Stripe account using an API key from the Stripe Dashboard.\n     - Authenticate your KlickTipp connection with username/password credentials (API access required).\n\n3. **Field Mapping and Workflow Alignment**\n   - Map Stripe output fields to the KlickTipp custom fields.\n   - Assign the tag to trigger your post-purchase campaign.\n   - Ensure that required data like email and opt-in info are present for the contact to be valid.\n\n### Testing and Deployment\n1. Click on **Inactive** to activate the scenario.\n2. Perform a test payment using a Stripe product link.\n3. Verify in KlickTipp:\n   - The contact appears with email and opt-in status.\n   - Custom fields for Stripe are filled.\n   - The campaign tag is correctly applied and confirmation email is sent.\n\n> \u26a0\ufe0f *Note*: Use real or test-mode API keys in Stripe depending on your testing environment. Stripe events may take a few seconds to propagate.\n\n### Campaign Expansion Ideas\n- Launch targeted upsell flows based on the product tag.\n- Use confirmation placeholders like:\n  - `[[Stripe_Beleg_URL]]`\n  - `[[Stripe_Gesamtbetrag]]`\n  - `[[Stripe_Zahlungs_ID]]`\n  - `[[Stripe_Produkte]]`\n- Route customers to different product access portals (e.g., Memberspot, Mentortools).\n- Send follow-up content over multiple days using KlickTipp sequences.\n\n### Customization\nYou can extend the scenario using a switch node to:\n- Assign different tags per used payment link\n- Branch into upsell or membership activation flows  \n- Chain additional automations like CRM entry, Slack notification, or invoice creation.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "26f6a896-68ce-491f-9e7e-92a667aff2a5",
      "name": "Getting invoice link",
      "type": "n8n-nodes-base.stripe",
      "notes": "This node gets the details from the payment in order to identify the line items and amount of the payment.",
      "position": [
        -60,
        -180
      ],
      "parameters": {
        "chargeId": "={{ $json.latest_charge }}",
        "resource": "charge"
      },
      "credentials": {
        "stripeApi": {
          "id": "0eu6Lo5OpkxqR4o0",
          "name": "Dev Testing Stripe account"
        }
      },
      "notesInFlow": true,
      "typeVersion": 1
    },
    {
      "id": "d16814e5-7255-4da3-ac0c-64b80e4fc72c",
      "name": "Getting charge ID",
      "type": "n8n-nodes-base.httpRequest",
      "notes": "This node gets the charge ID from the checkout completion in order to be able to fetch the receipt url.",
      "position": [
        -280,
        -180
      ],
      "parameters": {
        "url": "=https://api.stripe.com/v1/payment_intents/{{ $('New checkout session completed').item.json.data.object.payment_intent }}",
        "options": {},
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Basic <YOURKEY>"
            }
          ]
        }
      },
      "notesInFlow": true,
      "typeVersion": 4.2
    },
    {
      "id": "815f0790-be2c-455f-a3ad-02b2b118a3ff",
      "name": "Getting line items",
      "type": "n8n-nodes-base.httpRequest",
      "notes": "This node gets the line items from the checkout session.",
      "position": [
        -480,
        -180
      ],
      "parameters": {
        "url": "=https://api.stripe.com/v1/checkout/sessions/{{ $json.data.object.id }}/line_items",
        "options": {},
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Stripe-Version",
              "value": "2025-05-28.basil"
            },
            {
              "name": "authorization",
              "value": "Basic <YOURKEY>"
            }
          ]
        }
      },
      "notesInFlow": true,
      "typeVersion": 4.2
    },
    {
      "id": "e719d079-0065-44a2-a2c1-c59ded09b388",
      "name": "New checkout session completed",
      "type": "n8n-nodes-base.stripeTrigger",
      "notes": "This trigger listens to successful checkout completions from Stripe.",
      "position": [
        -700,
        -180
      ],
      "webhookId": "0d270008-d22c-486b-8ba1-e7d68b942512",
      "parameters": {
        "events": [
          "checkout.session.completed"
        ]
      },
      "credentials": {
        "stripeApi": {
          "id": "0eu6Lo5OpkxqR4o0",
          "name": "Dev Testing Stripe account"
        }
      },
      "notesInFlow": true,
      "typeVersion": 1
    }
  ],
  "pinData": {
    "Getting charge ID": [
      {
        "id": "pi_3Rjf3pQkZguNehl70kVEzRm6",
        "amount": 150,
        "object": "payment_intent",
        "review": null,
        "source": null,
        "status": "succeeded",
        "created": 1752233053,
        "currency": "eur",
        "customer": null,
        "livemode": false,
        "metadata": {},
        "shipping": null,
        "processing": null,
        "application": null,
        "canceled_at": null,
        "description": null,
        "next_action": null,
        "on_behalf_of": null,
        "client_secret": "pi_3Rjf3pQkZguNehl70kVEzRm6_secret_9sLvV8mG1ICyHPM4ZkEPRyo8j",
        "latest_charge": "ch_3Rjf3pQkZguNehl70eSFbnCK",
        "receipt_email": null,
        "transfer_data": null,
        "amount_details": {
          "tip": {}
        },
        "capture_method": "automatic_async",
        "payment_method": "pm_1Rjf3oQkZguNehl7jypt7So1",
        "transfer_group": null,
        "amount_received": 150,
        "amount_capturable": 0,
        "last_payment_error": null,
        "setup_future_usage": null,
        "cancellation_reason": null,
        "confirmation_method": "automatic",
        "payment_method_types": [
          "card"
        ],
        "statement_descriptor": null,
        "application_fee_amount": null,
        "payment_method_options": {
          "card": {
            "network": null,
            "installments": null,
            "mandate_options": null,
            "request_three_d_secure": "automatic"
          }
        },
        "automatic_payment_methods": null,
        "statement_descriptor_suffix": null,
        "payment_method_configuration_details": null
      }
    ],
    "Getting line items": [
      {
        "url": "/v1/checkout/sessions/cs_test_b1Fl0epwqTK8fAqYvYzztLyRcecJIVtgoopYddqXFmPQj9rUPwVWZOGqlZ/line_items",
        "data": [
          {
            "id": "li_1Rjf3WQkZguNehl75fO6IpjF",
            "price": {
              "id": "price_1RUUxHQkZguNehl7V6Mr6IKG",
              "type": "one_time",
              "active": true,
              "object": "price",
              "created": 1748619287,
              "product": "prod_SPJaNisODiYpFh",
              "currency": "eur",
              "livemode": false,
              "metadata": {},
              "nickname": null,
              "recurring": null,
              "lookup_key": null,
              "tiers_mode": null,
              "unit_amount": 50,
              "tax_behavior": "unspecified",
              "billing_scheme": "per_unit",
              "custom_unit_amount": null,
              "transform_quantity": null,
              "unit_amount_decimal": "50"
            },
            "object": "item",
            "currency": "eur",
            "quantity": 1,
            "amount_tax": 0,
            "description": "Kuh Foto",
            "amount_total": 50,
            "amount_discount": 0,
            "amount_subtotal": 50
          },
          {
            "id": "li_1Rjf3WQkZguNehl7GOGkpHQU",
            "price": {
              "id": "price_1RUTtwQkZguNehl74yCjgQea",
              "type": "one_time",
              "active": true,
              "object": "price",
              "created": 1748615236,
              "product": "prod_SPIUE7NLhgaiws",
              "currency": "eur",
              "livemode": false,
              "metadata": {},
              "nickname": null,
              "recurring": null,
              "lookup_key": null,
              "tiers_mode": null,
              "unit_amount": 100,
              "tax_behavior": "unspecified",
              "billing_scheme": "per_unit",
              "custom_unit_amount": null,
              "transform_quantity": null,
              "unit_amount_decimal": "100"
            },
            "object": "item",
            "currency": "eur",
            "quantity": 1,
            "amount_tax": 0,
            "description": "Testprodukt Foto Welle",
            "amount_total": 100,
            "amount_discount": 0,
            "amount_subtotal": 100
          }
        ],
        "object": "list",
        "has_more": false
      }
    ],
    "Getting invoice link": [
      {
        "id": "ch_3Rjf3pQkZguNehl70eSFbnCK",
        "paid": true,
        "order": null,
        "amount": 150,
        "object": "charge",
        "review": null,
        "source": null,
        "status": "succeeded",
        "created": 1752233053,
        "dispute": null,
        "outcome": {
          "type": "authorized",
          "reason": null,
          "risk_level": "normal",
          "risk_score": 32,
          "advice_code": null,
          "network_status": "approved_by_network",
          "seller_message": "Payment complete.",
          "network_advice_code": null,
          "network_decline_code": null
        },
        "captured": true,
        "currency": "eur",
        "customer": null,
        "disputed": false,
        "livemode": false,
        "metadata": {},
        "refunded": false,
        "shipping": null,
        "application": null,
        "description": null,
        "destination": null,
        "receipt_url": "https://pay.stripe.com/receipts/payment/CAcaFwoVYWNjdF8xUlVSOGlRa1pndU5laGw3KPKs48MGMgb_9G8oAiM6LBaSlaISDbpeI4lQrVfFF87U7EVFa6tsqlWBlO7t0KZV_j9MU2JgT3SeU1FY",
        "failure_code": null,
        "on_behalf_of": null,
        "fraud_details": {},
        "radar_options": {},
        "receipt_email": null,
        "transfer_data": null,
        "payment_intent": "pi_3Rjf3pQkZguNehl70kVEzRm6",
        "payment_method": "pm_1Rjf3oQkZguNehl7jypt7So1",
        "receipt_number": null,
        "transfer_group": null,
        "amount_captured": 150,
        "amount_refunded": 0,
        "application_fee": null,
        "billing_details": {
          "name": "Ricardo Kl\u00fcnter",
          "email": "test@klicktipptest.com",
          "phone": null,
          "tax_id": null,
          "address": {
            "city": null,
            "line1": null,
            "line2": null,
            "state": null,
            "country": "PT",
            "postal_code": null
          }
        },
        "failure_message": null,
        "source_transfer": null,
        "balance_transaction": "txn_3Rjf3pQkZguNehl70Gtm3hqM",
        "statement_descriptor": null,
        "application_fee_amount": null,
        "payment_method_details": {
          "card": {
            "brand": "visa",
            "last4": "4242",
            "checks": {
              "cvc_check": "pass",
              "address_line1_check": null,
              "address_postal_code_check": null
            },
            "wallet": null,
            "country": "US",
            "funding": "credit",
            "mandate": null,
            "network": "visa",
            "exp_year": 2026,
            "exp_month": 8,
            "fingerprint": "BMFeaVRQMJD9EMGx",
            "overcapture": {
              "status": "unavailable",
              "maximum_amount_capturable": 150
            },
            "installments": null,
            "multicapture": {
              "status": "unavailable"
            },
            "network_token": {
              "used": false
            },
            "three_d_secure": null,
            "regulated_status": "unregulated",
            "amount_authorized": 150,
            "authorization_code": "307994",
            "extended_authorization": {
              "status": "disabled"
            },
            "network_transaction_id": "667770101978682",
            "incremental_authorization": {
              "status": "unavailable"
            }
          },
          "type": "card"
        },
        "failure_balance_transaction": null,
        "statement_descriptor_suffix": null,
        "calculated_statement_descriptor": "Stripe"
      }
    ],
    "New checkout session completed": [
      {
        "id": "evt_1Rjf3qQkZguNehl7U9GaCI8h",
        "data": {
          "object": {
            "id": "cs_test_b1Fl0epwqTK8fAqYvYzztLyRcecJIVtgoopYddqXFmPQj9rUPwVWZOGqlZ",
            "url": null,
            "mode": "payment",
            "locale": "auto",
            "object": "checkout.session",
            "status": "complete",
            "consent": null,
            "created": 1752233035,
            "invoice": null,
            "ui_mode": "hosted",
            "currency": "eur",
            "customer": null,
            "livemode": false,
            "metadata": {},
            "discounts": [],
            "cancel_url": "https://stripe.com",
            "expires_at": 1752319434,
            "custom_text": {
              "submit": null,
              "after_submit": null,
              "shipping_address": null,
              "terms_of_service_acceptance": null
            },
            "permissions": null,
            "submit_type": "auto",
            "success_url": "https://stripe.com",
            "amount_total": 150,
            "payment_link": "plink_1RUUxuQkZguNehl71P5ptXlR",
            "setup_intent": null,
            "subscription": null,
            "automatic_tax": {
              "status": null,
              "enabled": false,
              "provider": null,
              "liability": null
            },
            "client_secret": null,
            "custom_fields": [],
            "shipping_cost": null,
            "total_details": {
              "amount_tax": 0,
              "amount_discount": 0,
              "amount_shipping": 0
            },
            "customer_email": null,
            "origin_context": null,
            "payment_intent": "pi_3Rjf3pQkZguNehl70kVEzRm6",
            "payment_status": "paid",
            "recovered_from": null,
            "wallet_options": null,
            "amount_subtotal": 150,
            "adaptive_pricing": {
              "enabled": true
            },
            "after_expiration": null,
            "customer_details": {
              "name": "Ricardo Kl\u00fcnter",
              "email": "test@klicktipptest.com",
              "phone": null,
              "address": {
                "city": null,
                "line1": null,
                "line2": null,
                "state": null,
                "country": "PT",
                "postal_code": null
              },
              "tax_ids": [],
              "tax_exempt": "none"
            },
            "invoice_creation": {
              "enabled": false,
              "invoice_data": {
                "footer": null,
                "issuer": null,
                "metadata": {},
                "description": null,
                "custom_fields": null,
                "account_tax_ids": null,
                "rendering_options": null
              }
            },
            "shipping_options": [],
            "customer_creation": "if_required",
            "consent_collection": {
              "promotions": "none",
              "terms_of_service": "none",
              "payment_method_reuse_agreement": null
            },
            "client_reference_id": null,
            "currency_conversion": null,
            "payment_method_types": [
              "card",
              "bancontact",
              "eps",
              "klarna",
              "link"
            ],
            "allow_promotion_codes": false,
            "collected_information": null,
            "payment_method_options": {
              "card": {
                "request_three_d_secure": "automatic"
              }
            },
            "phone_number_collection": {
              "enabled": false
            },
            "payment_method_collection": "if_required",
            "billing_address_collection": "auto",
            "shipping_address_collection": null,
            "saved_payment_method_options": null,
            "payment_method_configuration_details": {
              "id": "pmc_1RUR9FQkZguNehl74mFAbws3",
              "parent": null
            }
          }
        },
        "type": "checkout.session.completed",
        "object": "event",
        "created": 1752233054,
        "request": {
          "id": null,
          "idempotency_key": null
        },
        "livemode": false,
        "api_version": "2025-04-30.basil",
        "pending_webhooks": 3
      }
    ]
  },
  "connections": {
    "Getting charge ID": {
      "main": [
        [
          {
            "node": "Getting invoice link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting line items": {
      "main": [
        [
          {
            "node": "Getting charge ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting invoice link": {
      "main": [
        [
          {
            "node": "Subscribe buyer to KlickTipp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New checkout session completed": {
      "main": [
        [
          {
            "node": "Getting line items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Automated Stripe to KlickTipp: Send Purchase Confirmation Emails via Tagging",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/6092",
    "scraped_at": "2025-08-21 04:53:06",
    "workflow_id": "152ac2fd-b86a-5cf6-baef-1f98bb513e33"
  },
  "_filename": "Automated_Stripe_to_KlickTipp_Send_Purchase_Confirmation_Emails_via_Tagging.json"
}