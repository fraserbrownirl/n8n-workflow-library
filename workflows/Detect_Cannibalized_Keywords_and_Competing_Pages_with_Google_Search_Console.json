{
  "meta": {
    "instanceId": "370f0437fbf8d71caf7e9230e115239afcf5012c55ac368aa9dee29869df4a6b",
    "templateCredsSetupCompleted": true
  },
  "nodes": [
    {
      "id": "d552d0a9-902d-4f5e-8910-8ade5a5511f9",
      "name": "Workflow Description",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        464,
        -272
      ],
      "parameters": {
        "width": 760,
        "height": 460,
        "content": "## \ud83d\udd0e Find Query Cannibalization (Google Search Console)\n\n**Purpose**\nDetect queries where **multiple pages** on your site compete and both receive clicks (true cannibalization).\n\n**How it works**\n1) Fetch last 12 months from GSC with dimensions **query** + **page**.\n2) Summarize by **query** \u2192 build arrays of pages and clicks per query.\n3) Filter \u2192 keep queries with **>1 page** AND **second page has clicks > 0**.\n\n**Before running**\n- Connect a **Google Search Console OAuth2** credential to the GSC node.\n- Replace `sc-domain:example.com` with your property (e.g., `sc-domain:your-domain.com`).\n\n**Tips**\n- For more robust results, consider summing clicks per page (use `sum` instead of `append`) and then filter for **\u2265 2 pages with clicks > 0**.\n- You can run ad\u2011hoc via **Manual Start** or automate via **Weekly Trigger**.\n\n**Output fields**\n- `query`, `appended_page[]`, `appended_clicks[]`, `count_query`\n\nTags: SEO, GSC, Cannibalization"
      },
      "typeVersion": 1
    },
    {
      "id": "04e6147e-7496-4596-a9e8-20c3e59ac1b2",
      "name": "Manual Start",
      "type": "n8n-nodes-base.start",
      "position": [
        768,
        240
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "c71d3c12-f095-4aac-affa-ed5196b5759e",
      "name": "Query Search Analytics",
      "type": "n8n-nodes-google-search-console.googleSearchConsole",
      "position": [
        1008,
        240
      ],
      "parameters": {
        "siteUrl": "sc-domain:example.com",
        "rowLimit": 10000,
        "operation": "getPageInsights",
        "dimensions": [
          "query",
          "page"
        ],
        "dateRangeMode": "last12mo"
      },
      "typeVersion": 1
    },
    {
      "id": "d9b96eac-bad1-4a41-9df4-4673076e24dd",
      "name": "Summarize by Query",
      "type": "n8n-nodes-base.summarize",
      "position": [
        1280,
        240
      ],
      "parameters": {
        "options": {},
        "fieldsToSplitBy": "query",
        "fieldsToSummarize": {
          "values": [
            {
              "field": "query"
            },
            {
              "field": "page",
              "aggregation": "append"
            },
            {
              "field": "clicks",
              "aggregation": "append"
            }
          ]
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "c7c50db0-8706-4f65-985a-262ab0a644e9",
      "name": "Filter Cannibal Queries",
      "type": "n8n-nodes-base.filter",
      "position": [
        1520,
        240
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{ $json.count_query }}",
              "rightValue": 1
            },
            {
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{ $json.appended_clicks[1] }}",
              "rightValue": 0
            }
          ]
        }
      },
      "typeVersion": 2.2
    }
  ],
  "pinData": {},
  "connections": {
    "Manual Start": {
      "main": [
        [
          {
            "node": "Query Search Analytics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize by Query": {
      "main": [
        [
          {
            "node": "Filter Cannibal Queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query Search Analytics": {
      "main": [
        [
          {
            "node": "Summarize by Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Detect Cannibalized Keywords and Competing Pages with Google Search Console",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/7237",
    "scraped_at": "2025-08-21 05:54:10",
    "workflow_id": "4b284154-214a-59eb-9566-851a7af9659c"
  },
  "_filename": "Detect_Cannibalized_Keywords_and_Competing_Pages_with_Google_Search_Console.json"
}