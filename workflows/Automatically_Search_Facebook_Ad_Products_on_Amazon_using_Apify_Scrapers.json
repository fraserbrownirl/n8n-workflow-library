{
  "id": "CNlX00MuSiOtJXQG",
  "meta": {
    "instanceId": "de7078f0855f0e960f39df9530d5e9762516cd1dfa98b13db725c63cf3f45fe9",
    "templateCredsSetupCompleted": true
  },
  "name": "Template v08/02 - Facebook Ad Library to Amazon Scraper",
  "tags": [
    {
      "id": "Ki43TEjHd7EDcykZ",
      "name": "My Templates",
      "createdAt": "2025-07-31T13:58:06.976Z",
      "updatedAt": "2025-07-31T13:58:06.976Z"
    }
  ],
  "nodes": [
    {
      "id": "8ea1eb6a-9814-4935-82f0-dbe7fbe1b318",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1632,
        32
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "bb8871d1-2208-406d-9210-e9b4c95d9cc3",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "onError": "continueRegularOutput",
      "position": [
        -672,
        -32
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 3
    },
    {
      "id": "3a4ad496-8165-4987-aee1-f804fb8d35fd",
      "name": "Run FB Library Actor",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1408,
        32
      ],
      "parameters": {
        "method": "POST",
        "options": {},
        "jsonBody": "{\n    \"count\": 10,\n    \"scrapeAdDetails\": true,\n    \"scrapePageAds.activeStatus\": \"all\",\n    \"urls\": [\n        {\n            \"url\": \"https://www.facebook.com/ads/library/?active_status=active&ad_type=all&country=US&is_targeted_country=false&media_type=all&q=Wireless%20Mouse&search_type=keyword_unordered&source=fb-logo\",\n            \"method\": \"GET\"\n        }\n    ]\n}",
        "sendBody": true,
        "specifyBody": "json"
      },
      "typeVersion": 4.2
    },
    {
      "id": "7d6752e1-b469-4ed2-a651-bd9be05cc80a",
      "name": "Get Actor's Scraped Content",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1184,
        32
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 4.2
    },
    {
      "id": "77462d23-50ef-4990-94ac-bce340f8ec93",
      "name": "Scrape Website Content",
      "type": "n8n-nodes-base.httpRequest",
      "onError": "continueRegularOutput",
      "position": [
        -384,
        112
      ],
      "parameters": {
        "url": "={{ $json.snapshot.caption }}",
        "options": {}
      },
      "typeVersion": 4.2,
      "alwaysOutputData": true
    },
    {
      "id": "a9849513-c2bd-42b4-97bf-d9d56a52c463",
      "name": "Turn Into PlainText",
      "type": "n8n-nodes-base.code",
      "onError": "continueRegularOutput",
      "position": [
        -160,
        112
      ],
      "parameters": {
        "jsCode": "// HTML to Plain Text Converter for n8n Code Node\n// This code takes HTML content and converts it to clean plain text\n\n// Get the HTML content from the previous node\n// Adjust the field name based on your input data structure\nconst htmlContent = $input.first().json.data\n\nif (!htmlContent) {\n  return [{ json: { error: \"No HTML content found in input\" } }];\n}\n\n// Function to strip HTML tags and decode HTML entities\nfunction htmlToPlainText(html) {\n  let text = html;\n  \n  // Remove script and style elements completely\n  text = text.replace(/<script[^>]*>[\\s\\S]*?<\\/script>/gi, '');\n  text = text.replace(/<style[^>]*>[\\s\\S]*?<\\/style>/gi, '');\n  \n  // Replace common block elements with line breaks\n  text = text.replace(/<\\/?(div|p|br|h[1-6]|li|tr)[^>]*>/gi, '\\n');\n  \n  // Replace list items with bullet points\n  text = text.replace(/<li[^>]*>/gi, '\u2022 ');\n  \n  // Remove all remaining HTML tags\n  text = text.replace(/<[^>]*>/g, '');\n  \n  // Decode common HTML entities\n  const entityMap = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&apos;': \"'\",\n    '&nbsp;': ' ',\n    '&copy;': '\u00a9',\n    '&reg;': '\u00ae',\n    '&trade;': '\u2122',\n    '&hellip;': '...',\n    '&mdash;': '\u2014',\n    '&ndash;': '\u2013'\n  };\n  \n  for (const [entity, char] of Object.entries(entityMap)) {\n    text = text.replace(new RegExp(entity, 'g'), char);\n  }\n  \n  // Decode numeric HTML entities (e.g., &#123;)\n  text = text.replace(/&#(\\d+);/g, (match, dec) => {\n    return String.fromCharCode(dec);\n  });\n  \n  // Decode hex HTML entities (e.g., &#x1F;)\n  text = text.replace(/&#x([0-9A-Fa-f]+);/g, (match, hex) => {\n    return String.fromCharCode(parseInt(hex, 16));\n  });\n  \n  // Clean up whitespace\n  text = text.replace(/\\n\\s*\\n/g, '\\n\\n'); // Remove excessive line breaks\n  text = text.replace(/[ \\t]+/g, ' '); // Replace multiple spaces/tabs with single space\n  text = text.trim(); // Remove leading/trailing whitespace\n  \n  return text;\n}\n\ntry {\n  const plainText = htmlToPlainText(htmlContent);\n  \n  return [{\n    json: {\n      originalHtml: htmlContent,\n      plainText: plainText,\n      characterCount: plainText.length,\n      wordCount: plainText.split(/\\s+/).filter(word => word.length > 0).length,\n      success: true\n    }\n  }];\n  \n} catch (error) {\n  return [{\n    json: {\n      error: `Failed to convert HTML to text: ${error.message}`,\n      originalHtml: htmlContent,\n      success: false\n    }\n  }];\n}"
      },
      "typeVersion": 2,
      "alwaysOutputData": true
    },
    {
      "id": "589ecbf9-917f-470e-9ade-5553b453421f",
      "name": "Run Amazon Search Actor",
      "type": "n8n-nodes-base.httpRequest",
      "onError": "continueRegularOutput",
      "position": [
        768,
        128
      ],
      "parameters": {
        "method": "POST",
        "options": {},
        "jsonBody": "={\n    \"input\": [\n        {\n            \"keyword\": \"{{ $json.message.content }}\",\n            \"domainCode\": \"com\",\n            \"sortBy\": \"recent\",\n            \"maxPages\": 1,\n            \"category\": \"aps\"\n        }\n    ]\n}",
        "sendBody": true,
        "specifyBody": "json"
      },
      "typeVersion": 4.2,
      "alwaysOutputData": true
    },
    {
      "id": "54bfb46b-4972-4cd0-a471-daf64f4f8aa2",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "onError": "continueRegularOutput",
      "position": [
        1216,
        128
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "d4bca713-ea0f-496b-935a-c7e03939c993",
              "name": "amazonURL",
              "type": "string",
              "value": "={{ 'https://www.amazon.com'.concat($json.dpUrl) }}"
            },
            {
              "id": "aa404d43-dd49-4836-be25-9546b764c44e",
              "name": "productTitle",
              "type": "string",
              "value": "={{ $json.productDescription }}"
            },
            {
              "id": "7e5ba88b-fd1b-44a3-999b-25fecc0dfdf1",
              "name": "price",
              "type": "number",
              "value": "={{ $json.price }}"
            },
            {
              "id": "756647b3-5893-498a-9233-afc4a7e25023",
              "name": "productRating",
              "type": "number",
              "value": "={{ $json.productRating.slice(0,3) }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "657bf062-6adb-4b04-b76b-ecec8c11ff33",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "onError": "continueRegularOutput",
      "position": [
        1440,
        128
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "05637cd3-af97-4c9a-908e-ce53f5d89d2a",
              "operator": {
                "type": "number",
                "operation": "gte"
              },
              "leftValue": "={{ $json.productRating }}",
              "rightValue": 4.3
            }
          ]
        }
      },
      "typeVersion": 2.2,
      "alwaysOutputData": true
    },
    {
      "id": "c4e12fad-a045-4e97-a6c0-da1eecf92e27",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "position": [
        1792,
        128
      ],
      "parameters": {},
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "id": "ecd58583-9264-493c-8f9c-d1806efcae5a",
      "name": "SaveItems",
      "type": "n8n-nodes-base.set",
      "position": [
        2016,
        128
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "c035dbc4-96c7-41f3-abc4-865026954816",
              "name": "amazonURL",
              "type": "string",
              "value": "={{ $json.amazonURL }}"
            },
            {
              "id": "4eed2bbc-41f3-4deb-8704-a121180645d3",
              "name": "productTitle",
              "type": "string",
              "value": "={{ $json.productTitle }}"
            },
            {
              "id": "1dcbb87d-c334-42e6-947e-3ef53496031c",
              "name": "price",
              "type": "number",
              "value": "={{ $json.price }}"
            },
            {
              "id": "00c79031-b624-4ac4-a6dc-1415bbc99b96",
              "name": "productRating",
              "type": "number",
              "value": "={{ $json.productRating }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "8303de9c-cd7b-4b0e-9872-3288adda8e3e",
      "name": "SaveFBData",
      "type": "n8n-nodes-base.set",
      "position": [
        -960,
        32
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "36d7a682-5612-4303-9074-e9b4af4d70ab",
              "name": "snapshot.page_name",
              "type": "string",
              "value": "={{ $json.snapshot.page_name }}"
            },
            {
              "id": "33a6254a-1d92-4b7f-b93f-db437bacbfa9",
              "name": "snapshot.page_profile_uri",
              "type": "string",
              "value": "={{ $json.snapshot.page_profile_uri }}"
            },
            {
              "id": "f20599df-72d4-4aa9-bbff-752989bb8308",
              "name": "snapshot.caption",
              "type": "string",
              "value": "={{ $json.snapshot.cards[0].link_url }}"
            },
            {
              "id": "f4e5ed8c-3486-46b5-a52f-fd764f069dc5",
              "name": "snapshot.cards[0].link_url",
              "type": "string",
              "value": "={{ $json.snapshot.cards[0].link_url }}"
            },
            {
              "id": "9cc1a88d-3a08-433f-8952-0167d7c02648",
              "name": "snapshot.body.text",
              "type": "string",
              "value": "={{ $json.snapshot.body.text }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "6c461b84-6113-4e85-a56b-0497cfe8ebfc",
      "name": "Append row in sheet",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        16,
        -304
      ],
      "parameters": {
        "columns": {
          "value": {
            "Price": "={{ $json.price }}",
            "Rating": "={{ $json.productRating }}",
            "Link URL": "={{ $('SaveFBData').item.json.snapshot.cards[0].link_url }}",
            "AmazonURL": "={{ $json.amazonURL }}",
            "FB Page Name": "={{ $('SaveFBData').item.json.snapshot.page_name }}",
            "ProductTitle": "={{ $('Product Name Finder').item.json.message.content }}"
          },
          "schema": [
            {
              "id": "FB Page Name",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "FB Page Name",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Link URL",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Link URL",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "ProductTitle",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "ProductTitle",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "AmazonURL",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "AmazonURL",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Price",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Price",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Rating",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Rating",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "type": "number",
              "display": true,
              "removed": true,
              "readOnly": true,
              "required": false,
              "displayName": "row_number",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "row_number"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "append",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k5-Arb55v8HoIJueza4GrCiddTueK6thM6gqbWk8gaE/edit#gid=0",
          "cachedResultName": "Tabellenblatt1"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1k5-Arb55v8HoIJueza4GrCiddTueK6thM6gqbWk8gaE",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k5-Arb55v8HoIJueza4GrCiddTueK6thM6gqbWk8gaE/edit?usp=drivesdk",
          "cachedResultName": "Upwork - Abdelmageed - 07/28 - v1.0 - AmazonSearchTest"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "wvNvKEMKTceQSxtR",
          "name": "Google Sheets account"
        }
      },
      "typeVersion": 4.6
    },
    {
      "id": "cb85f819-e250-495c-9c22-3f95339f68ec",
      "name": "Get Amazon Search Results",
      "type": "n8n-nodes-base.httpRequest",
      "onError": "continueRegularOutput",
      "position": [
        992,
        128
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 4.2,
      "alwaysOutputData": true
    },
    {
      "id": "9b0b5ec2-f984-45c9-989c-a990a160f3b6",
      "name": "Product Name Finder",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        64,
        112
      ],
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "options": {},
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "=You are a helpful assistant. You take a Facebook ad's scraped website content, and search for a product being sold on that website. You only take one product, and find the product's name.\n\nThe purpose of this is to search that exact product on Amazon. Thus as an output, you formate that product's name as if you'd want to search it on Amazon. \n\n## Rules\n- If you don't get any content from the website, use the Facebook Ad page name, caption or body text to find the product name. If you still can't find it, say \"No Product Found\" as output.\n\n## Tools\n- Here's the website's scraped content: {{ $json.plainText }}\n- Facebook Ad Page Name: {{ $('SaveFBData').item.json.snapshot.page_name }}\n- Facebook Ad Caption: {{ $('SaveFBData').item.json.snapshot.caption }}\n- Facebook Ad Body Text: {{ $('SaveFBData').item.json.snapshot.body.text }}\n"
            },
            {}
          ]
        }
      },
      "credentials": {
        "openAiApi": {
          "id": "V3Jm4IHcAE2t5qRT",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.8
    },
    {
      "id": "e726b9e1-4c11-4a29-9bc6-4aa5b3aca3e9",
      "name": "If No Product Found",
      "type": "n8n-nodes-base.if",
      "position": [
        416,
        112
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "27e73c18-2a7e-47f1-9936-151785ce8633",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "No Product Found"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "5540ad53-3dcd-40d5-b736-ba013b5b8ba7",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1680,
        -128
      ],
      "parameters": {
        "color": 5,
        "width": 864,
        "height": 368,
        "content": "## \ud83d\udce4 Extract FB Ad Library\n- The first node calls the \"Facebook ad library scraper\" Apify scraper. For that, insert the \"Run Actor synchronously\" API inside API > API Endpoints. Change the FB Ad Library URL inside the JSON.\n- The second node receives the scraper's data. Insert the \"Get last run dataset items\" API."
      },
      "typeVersion": 1
    },
    {
      "id": "68fc52a9-56a4-41ca-b89d-135ebf672ad8",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -448,
        -16
      ],
      "parameters": {
        "color": 6,
        "width": 1024,
        "height": 304,
        "content": "## \ud83d\udd0e Find Product Name\n- Scrapes content from the website (see \"{{ $json.snapshot.caption }}\") of the scraped FB Ad. \n- Then searches for the product name to then search that on Amazon via another Apify scraper."
      },
      "typeVersion": 1
    },
    {
      "id": "441bbbce-12bc-41f5-bb98-89906d2991be",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        688,
        -16
      ],
      "parameters": {
        "color": 2,
        "width": 928,
        "height": 320,
        "content": "## \ud83d\udd0e Find Product on Amazon\n- The first HTTP Request node calls the \"Amazon Search Scraper\" Apify scraper. For that, insert the \"Run Actor synchronously\" API inside API > API Endpoints. The product name is being inserted into the JSON automatically.\n- The second node receives the scraper's data. Insert the \"Get last run dataset items\" API."
      },
      "typeVersion": 1
    },
    {
      "id": "8e83394d-661a-4254-a422-ce916b1fd81e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -448,
        -416
      ],
      "parameters": {
        "color": 4,
        "width": 704,
        "height": 272,
        "content": "## \ud83d\udce5 Insert Products Into Sheet\n- _This is optional_. If you want to save the data in some sort of database, make sure to create a Google spreadsheet first, then insert it here."
      },
      "typeVersion": 1
    },
    {
      "id": "1634ef7c-f911-468c-ad22-a07c6dba6309",
      "name": "If Amazon URL Found",
      "type": "n8n-nodes-base.if",
      "position": [
        -304,
        -304
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "3e78fef9-a7e1-42d1-abdb-bd3215d535b4",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.amazonURL }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "ce0793de-223d-4eac-bf15-c7d7bcac1d03",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1696,
        -16
      ],
      "parameters": {
        "color": 7,
        "width": 512,
        "height": 304,
        "content": "## Limit\n- Instead of having multiple searches of the same product, this limits the Amazon search results to 1."
      },
      "typeVersion": 1
    },
    {
      "id": "7f80d667-558a-4ea4-a3f3-f752f96a61fc",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2512,
        -320
      ],
      "parameters": {
        "color": 7,
        "width": 576,
        "height": 608,
        "content": "# \ud83d\udc4b Introduction\n\nThis automation workflow is connected with two Apify scrapers. Make sure to connect the two scrapers mentioned in the blue and orange box, with their specific API endpoints.\nOnce connected, this automation automatically scrapes Facebook ads from a specific Facebook Ad Library URL and searches for that same product on Amazon. Can be useful for Amazon FBA or dropshipping.\n\n\nIf you need further help, or want a specific automation to be built for you, feel free to contact me via richard@advetica-systems.com. \n\nRichard\nFounder @ Advetica Systems\n\n\n\n\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "1a8029ba-aa0d-4d85-9dd7-de178ef54f30",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2368,
        64
      ],
      "parameters": {
        "color": 7,
        "width": 288,
        "height": 224,
        "content": "![image](https://i.imgur.com/fC1ppRW.png#full-width)"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "76568f5a-ae86-45e9-8936-7fd9f8d5b43b",
  "connections": {
    "Limit": {
      "main": [
        [
          {
            "node": "SaveItems",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SaveItems": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SaveFBData": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Run FB Library Actor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "If Amazon URL Found",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Scrape Website Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Amazon URL Found": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If No Product Found": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Run Amazon Search Actor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Product Name Finder": {
      "main": [
        [
          {
            "node": "If No Product Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Turn Into PlainText": {
      "main": [
        [
          {
            "node": "Product Name Finder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run FB Library Actor": {
      "main": [
        [
          {
            "node": "Get Actor's Scraped Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Website Content": {
      "main": [
        [
          {
            "node": "Turn Into PlainText",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run Amazon Search Actor": {
      "main": [
        [
          {
            "node": "Get Amazon Search Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Amazon Search Results": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Actor's Scraped Content": {
      "main": [
        [
          {
            "node": "SaveFBData",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Automatically Search Facebook Ad Products on Amazon using Apify Scrapers",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/6888",
    "scraped_at": "2025-08-21 04:36:31",
    "workflow_id": "859d266a-9b09-5e6d-995e-8e507a7734fe"
  },
  "_filename": "Automatically_Search_Facebook_Ad_Products_on_Amazon_using_Apify_Scrapers.json"
}