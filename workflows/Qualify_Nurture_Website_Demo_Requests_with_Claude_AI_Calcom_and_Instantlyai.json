{
  "id": "h8qp29nxkuRdNTZj",
  "meta": {
    "instanceId": "46c4cce2e89603002c0d6107a8d4394ab0a48e7435c7b6ec71803a5658ecd21f",
    "templateCredsSetupCompleted": true
  },
  "name": "Inbound Website Demo Flow",
  "tags": [],
  "nodes": [
    {
      "id": "57350072-ad87-47a6-90ae-fed32a1f44a7",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        -640,
        520
      ],
      "webhookId": "[REDACTED_WEBHOOK_ID]",
      "parameters": {
        "path": "[REDACTED_WEBHOOK_PATH]",
        "options": {},
        "httpMethod": "POST",
        "responseMode": "responseNode"
      },
      "typeVersion": 2
    },
    {
      "id": "5e466870-15c8-4ef9-80f7-c61eba45dec5",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        396,
        620
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "66e59f3f-1eca-435b-a79a-d99d9caf9053",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.output.result }}",
              "rightValue": ""
            }
          ]
        },
        "looseTypeValidation": true
      },
      "typeVersion": 2.2
    },
    {
      "id": "3049636d-c2f8-490b-9f83-d14847d116d5",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "position": [
        836,
        520
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "6d115c9f-7884-4476-8312-6e16bdfe7956",
              "name": "output",
              "type": "boolean",
              "value": true
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "f190b291-780f-48c1-a265-d83ad9f4afb1",
      "name": "Route to Clay",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        620,
        520
      ],
      "parameters": {
        "url": "https://api.clay.com/v3/sources/webhook/pull-in-data-from-a-webhook-[REDACTED_CLAY_WEBHOOK_ID]",
        "method": "POST",
        "options": {},
        "sendBody": true,
        "sendQuery": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Last Name",
              "value": "={{ $('Trigify Enrichment').item.json.lastName }}"
            },
            {
              "name": "First Name",
              "value": "={{ $('Trigify Enrichment').item.json.firstName }}"
            },
            {
              "name": "Data of Demo Booked",
              "value": "={{ $('Webhook').item.json.body.timestamp }}"
            },
            {
              "name": "Referral Source",
              "value": "={{ $('Webhook').item.json.body.referralSource }}"
            },
            {
              "name": "Email",
              "value": "={{ $('Webhook').item.json.body.email }}"
            },
            {
              "name": "Person LinkedIn URL",
              "value": "={{ $('Webhook').item.json.body.linkedinUrl }}"
            },
            {
              "name": "Company LinkedIn URL",
              "value": "={{ $('Trigify Enrichment').item.json.position[0].companyURL }}"
            },
            {
              "name": "Company Name",
              "value": "={{ $('Trigify Enrichment').item.json.position[0].companyName }}"
            },
            {
              "name": "Job Title",
              "value": "={{ $('Trigify Enrichment').item.json.position[0].title }}"
            },
            {
              "name": "Qualified",
              "value": "TRUE"
            },
            {
              "name": "Address",
              "value": "={{ $('Trigify Enrichment').item.json.geo.country }}"
            }
          ]
        },
        "queryParameters": {
          "parameters": [
            {}
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "3bb570e2-92b5-4c99-b7bc-fb7146b09109",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "position": [
        836,
        720
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "6d115c9f-7884-4476-8312-6e16bdfe7956",
              "name": "output",
              "type": "boolean",
              "value": false
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "0a815ac7-849a-4d38-8e6a-7d29006e8b26",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "position": [
        -420,
        520
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "23d39936-7fa1-44ad-b70e-22e20d49cef0",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.body.source }}",
              "rightValue": "lead_capture_box"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "64ee1f54-5283-4153-a61f-2c4f67c43c0a",
      "name": "Route to Clay2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -200,
        420
      ],
      "parameters": {
        "url": "https://api.clay.com/v3/sources/webhook/pull-in-data-from-a-webhook-[REDACTED_CLAY_WEBHOOK_ID]",
        "method": "POST",
        "options": {},
        "sendBody": true,
        "sendQuery": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Data of Demo Booked",
              "value": "={{ $('Webhook').item.json.body.timestamp }}"
            },
            {
              "name": "Qualified",
              "value": "NOT BOOKED"
            },
            {
              "name": "Email",
              "value": "={{ $json.body.email }}"
            }
          ]
        },
        "queryParameters": {
          "parameters": [
            {}
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "25ef1170-0ce9-4561-a158-0955612a7a87",
      "name": "Anthropic Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "position": [
        -20,
        820
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-sonnet-4-20250514",
          "cachedResultName": "Claude Sonnet 4"
        },
        "options": {}
      },
      "credentials": {
        "anthropicApi": {
          "id": "[REDACTED_ANTHROPIC_CRED_ID]",
          "name": "Anthropic account 2"
        }
      },
      "typeVersion": 1.3
    },
    {
      "id": "e9113979-47d6-48f2-83e0-230f279c08a3",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        240,
        820
      ],
      "parameters": {
        "jsonSchemaExample": "{\n  \"result\": true\n}"
      },
      "typeVersion": 1.2
    },
    {
      "id": "f5270e3b-5478-4b1b-891a-a5f5fc6e459b",
      "name": "AI Qulification",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "onError": "continueRegularOutput",
      "maxTries": 5,
      "position": [
        20,
        620
      ],
      "parameters": {
        "text": "=Analyse this person, ensure their current company the work for is a B2B company Based on this company descrption give me a True or false if this company is a B2B company -  \n\nindustry - {{ $json.position[0].companyIndustry }}\ncompany name - {{ $json.position[0].companyName }}\ncompany size - {{ $json.position[0].companyStaffCountRange }}\n\nI also only want to speak to countries that are in the US, UK, Europe or Australia\n\nLocation - {{ $json.geo.country }} {{ $json.geo.countryCode }}\nTheir job title needs to also be a senior job title so anything that countains, Head of, Director, VP, C-level.\n\nOR\n\nIt contains the following keywords - Influencer, Strategy OR it contains GTM or Growth regardless of the seniorty wich is TRUE regardless of seniorty.\n\nJob title - {{ $json.position[0].title }}\nEmployment Status - {{ $json.position[0].employmentType }}\nStart Date - {{ $json.position[0].start.year }}\nEnd Date - {{ $json.position[0].end.year }}\n\nIF all true mark as true is 1 thing is false mark as false. \n\nIF one of these is false and the rest are true mark as true. Unless the location contains India, Pakistan, Banglisdesh etc.\n\nIf their job title contains Advisor, Contractor, Creator, Investor, Host etc (essentually any job title that suggests they could be wokring thier part time just their second job experience)\n\nindustry - {{ $json.position[1].companyIndustry }}\ncompany name - {{ $json.position[1].companyName }}\ncompany size - {{ $json.position[1].companyStaffCountRange }}\nStart Date - {{ $json.position[1].start.year }}\nEnd Date - {{ $json.position[1].end.year }} {{ $json.position[1].end.month }} {{ $json.position[1].end.day }}\n\nIf their end data in their second job has older than todays date you know they no longer work their. ",
        "options": {},
        "promptType": "define",
        "hasOutputParser": true
      },
      "retryOnFail": true,
      "typeVersion": 2
    },
    {
      "id": "3694fc97-39f8-431d-b04a-02e0bbd5db8a",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1056,
        520
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1.3
    },
    {
      "id": "6a198ba4-3aaa-4e61-90cc-c18a4df15f29",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        1276,
        520
      ],
      "webhookId": "[REDACTED_WAIT_WEBHOOK_ID]",
      "parameters": {
        "unit": "minutes"
      },
      "typeVersion": 1.1
    },
    {
      "id": "c54e8358-b392-4542-a91f-b7c2defc7688",
      "name": "Check Cal.com For Booking",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1496,
        520
      ],
      "parameters": {
        "url": "https://api.cal.com/v2/bookings",
        "options": {},
        "sendQuery": true,
        "sendHeaders": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "attendeeEmail",
              "value": "={{ $('Webhook').item.json.body.email }}"
            }
          ]
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer [REDACTED_CAL_API_KEY]"
            },
            {
              "name": "cal-api-version",
              "value": "2024-08-13"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "0eacc5e3-db2f-481c-82d3-14b13f026563",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "position": [
        1716,
        520
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "a486dbd2-351b-4dde-8bf8-ea74b130aee1",
              "operator": {
                "type": "dateTime",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.data[0].start }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "0853790c-1051-4d8a-8054-b380c7cd1314",
      "name": "Add to Instantly",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2380,
        520
      ],
      "parameters": {
        "url": "https://api.instantly.ai/api/v2/leads",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"campaign\": \"[REDACTED_INSTANTLY_CAMPAIGN_ID]\",\n  \"email\": \"{{ $('Webhook').item.json.body.email }}\",\n  \"first_name\": \"{{ $node['Trigify Enrichment'].json.firstName }}\",\n  \"last_name\": \"{{ $node['Trigify Enrichment'].json.lastName }}\",\n  \"company_name\": \"{{ $node['Trigify Enrichment'].json.position[0].companyName }}\",\n  \"custom_variables\": {\n    \"research\": \"{{ $json.output.Sentence }}\"\n  }\n}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer [REDACTED_INSTANTLY_API_KEY]"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "8e22b65c-d133-47e4-baca-55773aade60c",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1960,
        520
      ],
      "parameters": {
        "text": "Run task.",
        "options": {
          "systemMessage": "=Prospect Follow-Up Email Generator\nYou are an expert sales copywriter specializing in personalized outreach for SaaS companies. Your task is to craft a compelling follow-up email sentence for prospects who showed interest but didn't complete booking a demo.\nContext\n\nCompany: Trigify - Social Intelligence platform that monitors social conversations and converts data into actionable insights\nSituation: Prospect visited demo booking page but didn't complete the booking\nGoal: Re-engage with a personalized value proposition\n\nAvailable Data Variables\nProspect Company: {{ $('Trigify Enrichment').item.json.position[0].companyName }}\nUse Case Interest: {{ $('Webhook').item.json.body.useCase }}\nProspect Email/Domain: {{ $('Webhook').item.json.body.email }}\nYour Task\nRewrite this sentence to be more compelling and personalized:\nOriginal: \"I'd love to show you exactly how you can leverage our Social Intelligence tool to help you (add in custom information here based on what they do, their ICP and the fact they said they wanted to use Trigify to help them with - \"{{ $('Webhook').item.json.body.useCase }}\".\"\nRequirements\n\nLength: Keep it concise (1-2 sentences maximum)\nPersonalization: Include specific details based on their company and stated use case\nValue-focused: Lead with tangible benefits, not features\nNatural flow: Should sound conversational, not salesy\n\nResearch Process\n\nUse the web search tool to research the prospect's company website\nIdentify their business model, target market, and likely pain points\nConnect their stated use case to specific Trigify capabilities\nCraft a personalized sentence that resonates with their situation\n\nTrigify's Core Capabilities\n\nSocial Monitoring: Track conversations across platforms before they explode\nEngagement Intelligence: See who's engaging with content and when they're most receptive\nContent Performance: Identify what messaging resonates with target audiences\nCompetitive Intelligence: Monitor competitor strategies and audience engagement patterns\n\n1. Generate Qualified Leads from Content Engagement\nHow: Profile Engagement feature\n\nAdd competitor LinkedIn URLs + thought leader profiles\nFilter results by ICP (title contains \"VP\", company size 50-500 employees, etc.)\nFocus on people who engaged 2-3+ times (shows real interest)\nExport to Clay/CSV for outreach\n\nReal example from calls: Brandon tracks cybersecurity thought leaders \u2192 gets 25% reply rate because prospects are already interested in the topic\n\n2. Track Real-Time Social Conversations\nHow: Listening feature\n\nSet up Boolean keyword searches (\"AI automation\" AND \"manufacturing\")\nMonitor across LinkedIn, Reddit, YouTube\nGet webhook notifications to Slack when conversations happen\nJump into relevant comment threads\n\nReal example: Elias wants alerts when people discuss cybersecurity topics so his exec team can comment early and get visibility\n\n3. Monitor Competitors' Moves and Campaigns\nHow: Profile Engagement + Listening combined\n\nTrack competitor company pages + their key executives' personal profiles\nSet up Listening searches for competitor brand names\nSee what content they're posting and who's engaging with it\nSteal their engaged audience for your outreach\n\nReal example: Nicholas wants to track competitors in manufacturing to find people who are \"solution aware\" and already evaluating similar tools\n\n4. Discover Emerging Industry & Product Trends\nHow: Listening + Influencers search\n\nUse Influencers search to find people posting about your industry keywords\nSet up broad Listening searches for industry terms\nMonitor what topics are getting the most engagement\nTrack which posts/topics are trending upward\n\nReal example: Multiple users mentioned wanting to find \"what the industry is talking about\" to inform content strategy and sales conversations\n\n5. Protect and Measure Brand Reputation\nHow: Listening with brand name monitoring\n\nSet up Listening searches for your company name, product names, CEO name\nMonitor mentions across LinkedIn, Reddit, YouTube\nGet instant Slack notifications for any mentions\nTrack sentiment by reviewing actual posts/comments\n\nReal example: Users mentioned wanting \"brand monitoring\" capabilities, though this was less developed in the conversations compared to the lead generation use cases\n\nGood Examples\n\u2705 \"I'd love to show you exactly how you can leverage our Social Intelligence tool to help you track competitors like [Specific Competitor A] and [Specific Competitor B] given your focus on [specific use case].\"\n\u2705 \"I'd love to show you exactly how you can leverage our Social Intelligence tool to help you identify the perfect timing to reach out to prospects in [their industry] based on their social engagement patterns.\"\nOutput Format\nProvide:\n\nResearch Summary: 2-3 sentences about what you found about their company\nPersonalized Sentence: Your improved version\nReasoning: Brief explanation of your personalization choices\n\n\nNow, please research the prospect's company and provide your improved sentence."
        },
        "promptType": "define",
        "hasOutputParser": true
      },
      "typeVersion": 2
    },
    {
      "id": "7ce7a8b3-f7e6-4aee-8a32-bfaf0a10b547",
      "name": "Anthropic Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "position": [
        1936,
        740
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-3-7-sonnet-20250219",
          "cachedResultName": "Claude 3.7 Sonnet"
        },
        "options": {}
      },
      "credentials": {
        "anthropicApi": {
          "id": "[REDACTED_ANTHROPIC_CRED_ID]",
          "name": "Anthropic account 2"
        }
      },
      "typeVersion": 1.3
    },
    {
      "id": "cc86ff55-028a-4f01-aa6f-ab4b2e2990e2",
      "name": "Search Web",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "position": [
        2060,
        880
      ],
      "parameters": {
        "url": "https://api.openai.com/v1/responses",
        "method": "POST",
        "jsonBody": "={\n  \"model\": \"gpt-4o\",\n  \"tools\": [{\"type\": \"web_search_preview\"}],\n  \"input\": \"{placeholder}\"\n}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "toolDescription": "Use this tool to search the web",
        "parametersHeaders": {
          "values": [
            {
              "name": "Content-Type",
              "value": "application/json",
              "valueProvider": "fieldValue"
            },
            {
              "name": "Authorization",
              "value": "Bearer [REDACTED_OPENAI_API_KEY]",
              "valueProvider": "fieldValue"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "placeholder",
              "type": "string",
              "description": "Add your question here"
            }
          ]
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "393266d0-400f-4d98-a4b5-384eb352ef0e",
      "name": "Structured Output Parser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        2200,
        740
      ],
      "parameters": {
        "jsonSchemaExample": "{\n\t\"Sentence\": \"I'd love to show you exactly how you can leverage our Social Intelligence tool to help you research emerging telecom trends and customer sentiment patterns, giving HLR Lookup a competitive edge in identifying new market opportunities before other mobile validation providers even know they exist.\"\n}"
      },
      "typeVersion": 1.2
    },
    {
      "id": "7e279f33-9574-4ef8-afee-9960cd40c6d5",
      "name": "Route to Clay1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        616,
        720
      ],
      "parameters": {
        "url": "https://api.clay.com/v3/sources/webhook/pull-in-data-from-a-webhook-[REDACTED_CLAY_WEBHOOK_ID]",
        "method": "POST",
        "options": {},
        "sendBody": true,
        "sendQuery": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Last Name",
              "value": "={{ $('Trigify Enrichment').item.json.lastName }}"
            },
            {
              "name": "First Name",
              "value": "={{ $('Trigify Enrichment').item.json.firstName }}"
            },
            {
              "name": "Data of Demo Booked",
              "value": "={{ $('Webhook').item.json.body.timestamp }}"
            },
            {
              "name": "Referral Source",
              "value": "={{ $('Webhook').item.json.body.referralSource }}"
            },
            {
              "name": "Email",
              "value": "={{ $('Webhook').item.json.body.email }}"
            },
            {
              "name": "Person LinkedIn URL",
              "value": "={{ $('Webhook').item.json.body.linkedinUrl }}"
            },
            {
              "name": "Company LinkedIn URL",
              "value": "={{ $('Trigify Enrichment').item.json.position[0].companyURL }}"
            },
            {
              "name": "Company Name",
              "value": "={{ $('Trigify Enrichment').item.json.position[0].companyName }}"
            },
            {
              "name": "Job Title",
              "value": "={{ $('Trigify Enrichment').item.json.position[0].title }}"
            },
            {
              "name": "Qualified",
              "value": "FALSE"
            },
            {
              "name": "Address",
              "value": "={{ $('Trigify Enrichment').item.json.geo.country }}"
            }
          ]
        },
        "queryParameters": {
          "parameters": [
            {}
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "72b2a565-c939-4e54-b5e4-f29fb68d549d",
      "name": "Trigify Enrichment",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -200,
        620
      ],
      "parameters": {
        "url": "/v1/profile/track",
        "options": {},
        "sendQuery": true,
        "sendHeaders": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.body.linkedinUrl }}"
            }
          ]
        }
      },
      "typeVersion": 4.2
    }
  ],
  "active": true,
  "pinData": {
    "Webhook": [
      {
        "json": {
          "body": {
            "email": "Obaid@clay.com",
            "useCase": "social_tracking",
            "timestamp": "2025-07-23T09:50:32.271Z",
            "linkedinUrl": "https://www.linkedin.com/in/obaidbot/",
            "submissionId": "898c4189-ba31-492b-b5fa-c194bb738c43",
            "referralSource": "colleague"
          },
          "query": {},
          "params": {},
          "headers": {
            "host": "primary-dev-de79.up.railway.app",
            "accept": "*/*",
            "origin": "https://forms.trigify.io",
            "referer": "https://forms.trigify.io/",
            "priority": "u=1, i",
            "sec-ch-ua": "\"Not)A;Brand\";v=\"8\", \"Chromium\";v=\"138\", \"Google Chrome\";v=\"138\"",
            "x-real-ip": "176.24.73.60",
            "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36",
            "content-type": "application/json",
            "content-length": "230",
            "sec-fetch-dest": "empty",
            "sec-fetch-mode": "cors",
            "sec-fetch-site": "cross-site",
            "x-railway-edge": "railway/europe-west4",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
            "x-forwarded-for": "176.24.73.60",
            "x-request-start": "1753264232475",
            "sec-ch-ua-mobile": "?0",
            "x-forwarded-host": "primary-dev-de79.up.railway.app",
            "x-forwarded-proto": "https",
            "sec-ch-ua-platform": "\"macOS\"",
            "x-railway-request-id": "ZS3fh382Qaq6CxyanD36RA"
          },
          "webhookUrl": "https://primary-dev-de79.up.railway.app/webhook/[REDACTED_WEBHOOK_PATH]",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "k9B4WRkBA0bn46pU",
    "executionOrder": "v1"
  },
  "versionId": "891c2065-73e9-47d2-9164-de0644a1c098",
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Route to Clay",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Route to Clay1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Route to Clay2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Trigify Enrichment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Check Cal.com For Booking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Add to Instantly",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Web": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        []
      ]
    },
    "Route to Clay": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route to Clay1": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Qulification": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add to Instantly": {
      "main": [
        []
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigify Enrichment": {
      "main": [
        [
          {
            "node": "AI Qulification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Qulification",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Qulification",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Check Cal.com For Booking": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Qualify & Nurture Website Demo Requests with Claude AI, Cal.com and Instantly.ai",
    "used_count": 5,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/6380",
    "scraped_at": "2025-08-17 18:29:07"
  }
}