{
  "id": "RZFEYs9oG7i3kXTP",
  "meta": null,
  "name": "Beeminder Tool MCP Server",
  "tags": [],
  "nodes": [
    {
      "id": "29871ef8-359a-419a-b125-4b457ceb3a81",
      "name": "Workflow Overview 0",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1460,
        -260
      ],
      "parameters": {
        "width": 420,
        "height": 780,
        "content": "## \ud83d\udee0\ufe0f Beeminder Tool MCP Server\n\n### \ud83d\udccb Available Operations (4 total)\n\n**Datapoint**: create, delete, get all, update\n\n### \u2699\ufe0f Setup Instructions\n\n1. **Import Workflow**: Load this workflow into your n8n instance\n\n1. **\ud83d\udd11 Add Credentials**: Configure Beeminder Tool authentication in one tool node then open and close all others.\n2. **\ud83d\ude80 Activate**: Enable this workflow to start your MCP server\n3. **\ud83d\udd17 Get URL**: Copy webhook URL from MCP trigger (right side)\n4. **\ud83e\udd16 Connect**: Use MCP URL in your AI agent configurations\n\n### \u2728 Ready-to-Use Features\n\n\u2022 Zero configuration - all 4 operations pre-built\n\u2022 AI agents automatically populate parameters via `$fromAI()` expressions\n\u2022 Every resource and operation combination available\n\u2022 Native n8n error handling and response formatting\n\u2022 Modify parameter defaults in any tool node as needed\n\n### \ud83d\udcac Need Help?\nCheck the [n8n documentation](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolmcp/) or ping me on [discord](https://discord.me/cfomodz) for MCP integration guidance or customizations."
      },
      "typeVersion": 1
    },
    {
      "id": "efe66f9d-90bc-43e7-9b9d-9804732e7c27",
      "name": "Beeminder Tool MCP Server",
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "position": [
        -420,
        -240
      ],
      "webhookId": "9b9e09b6-5f39-45a0-bb0d-4068c4a0a5e2",
      "parameters": {
        "path": "beeminder-tool-mcp"
      },
      "typeVersion": 1
    },
    {
      "id": "db29fc90-fedd-466b-8ce9-4cfa2214ca5a",
      "name": "Create datapoint for goal",
      "type": "n8n-nodes-base.beeminderTool",
      "position": [
        -800,
        140
      ],
      "parameters": {
        "value": "={{ $fromAI('Value', ``, 'number') }}",
        "goalName": "={{ $fromAI('Goal_Name', ``, 'string') }}",
        "additionalFields": {}
      },
      "credentials": {
        "beeminderApi": {
          "id": "SET_YOUR_CREDENTIAL_ID_HERE",
          "name": "Credential Name"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "c86e300c-044b-4177-9937-81ea07433061",
      "name": "Delete a datapoint",
      "type": "n8n-nodes-base.beeminderTool",
      "position": [
        -580,
        140
      ],
      "parameters": {
        "goalName": "={{ $fromAI('Goal_Name', ``, 'string') }}",
        "operation": "delete"
      },
      "credentials": {
        "beeminderApi": {
          "id": "SET_YOUR_CREDENTIAL_ID_HERE",
          "name": "Credential Name"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "91fef231-23e1-46d4-8e7e-c99874ca3b54",
      "name": "Get many datapoints for a goal",
      "type": "n8n-nodes-base.beeminderTool",
      "position": [
        -360,
        140
      ],
      "parameters": {
        "limit": "={{ $fromAI('Limit', ``, 'number') }}",
        "options": {},
        "goalName": "={{ $fromAI('Goal_Name', ``, 'string') }}",
        "operation": "getAll",
        "returnAll": "={{ $fromAI('Return_All', ``, 'boolean') }}"
      },
      "credentials": {
        "beeminderApi": {
          "id": "SET_YOUR_CREDENTIAL_ID_HERE",
          "name": "Credential Name"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "e9527f18-a905-44d7-a13f-d004497d4e67",
      "name": "Update a datapoint",
      "type": "n8n-nodes-base.beeminderTool",
      "position": [
        -140,
        140
      ],
      "parameters": {
        "goalName": "={{ $fromAI('Goal_Name', ``, 'string') }}",
        "operation": "update",
        "updateFields": {}
      },
      "credentials": {
        "beeminderApi": {
          "id": "SET_YOUR_CREDENTIAL_ID_HERE",
          "name": "Credential Name"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "9b2d9c41-9a16-48f3-9524-a28c0d3c63c4",
      "name": "Sticky Note 1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        120
      ],
      "parameters": {
        "color": 4,
        "width": 1060,
        "height": 180,
        "content": "## Datapoint"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "shared": [
    {
      "role": "workflow:owner",
      "project": {
        "id": "G5fce9xGuBAsWBXe",
        "icon": null,
        "name": "David Ashby <david.ashby.lds@gmail.com>",
        "type": "personal",
        "createdAt": "2025-06-04T02:55:02.013Z",
        "updatedAt": "2025-06-04T02:56:01.361Z",
        "projectRelations": [
          {
            "role": "project:personalOwner",
            "user": {
              "id": "715c1c00-cb48-4712-9a32-f1f4b6db2b30",
              "role": "global:owner",
              "email": "david.ashby.lds@gmail.com",
              "disabled": false,
              "lastName": "Ashby",
              "settings": {
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1749357655581
                },
                "userActivated": true,
                "userActivatedAt": 1749075994495,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "3N3vVikZb3MckFYm"
              },
              "createdAt": "2025-06-04T02:55:01.745Z",
              "firstName": "David",
              "isPending": false,
              "updatedAt": "2025-06-08T04:40:58.399Z",
              "mfaEnabled": false,
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_n8n_version": "1.95.3",
                "personalization_survey_submitted_at": "2025-06-04T02:56:07.075Z"
              }
            },
            "userId": "715c1c00-cb48-4712-9a32-f1f4b6db2b30",
            "createdAt": "2025-06-04T02:55:02.013Z",
            "projectId": "G5fce9xGuBAsWBXe",
            "updatedAt": "2025-06-04T02:55:02.013Z"
          }
        ]
      },
      "createdAt": "2025-06-25T21:24:51.141Z",
      "projectId": "G5fce9xGuBAsWBXe",
      "updatedAt": "2025-06-25T21:24:51.141Z",
      "workflowId": "RZFEYs9oG7i3kXTP"
    }
  ],
  "pinData": {},
  "settings": {
    "timezone": "America/New_York"
  },
  "createdAt": "2025-06-25T21:24:51.140Z",
  "updatedAt": "2025-06-25T21:25:10.000Z",
  "versionId": "31d49ace-c080-4408-99a9-29a9cf0ac7b1",
  "isArchived": false,
  "staticData": null,
  "connections": {
    "Delete a datapoint": {
      "ai_tool": [
        [
          {
            "node": "Beeminder Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update a datapoint": {
      "ai_tool": [
        [
          {
            "node": "Beeminder Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create datapoint for goal": {
      "ai_tool": [
        [
          {
            "node": "Beeminder Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many datapoints for a goal": {
      "ai_tool": [
        [
          {
            "node": "Beeminder Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "triggerCount": 0,
  "_metadata": {
    "name": "Beeminder Tool MCP Server  4 operations",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/5327",
    "scraped_at": "2025-08-21 03:32:16",
    "workflow_id": "accd0f65-abd8-59a2-bf49-f1d1ac26aaf4"
  },
  "_filename": "Beeminder_Tool_MCP_Server_4_operations.json"
}