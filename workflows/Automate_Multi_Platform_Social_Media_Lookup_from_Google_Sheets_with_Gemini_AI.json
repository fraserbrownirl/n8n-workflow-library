{
  "id": "dZP8oRCxoLytRJDF",
  "meta": {
    "instanceId": "26bd595441827fb23edb0643d6d240e79b0b8993d278e90950f16e18bf9e3c4a"
  },
  "name": "Automate social media profile lookup from Google Sheets with AI",
  "tags": [],
  "nodes": [
    {
      "id": "f1a23673-c623-4406-9372-904ab0b8fbdd",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -192,
        -32
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "89d5752d-ac86-4644-ad41-40600bb919ac",
      "name": "OpenRouter Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "position": [
        976,
        160
      ],
      "parameters": {
        "model": "google/gemini-2.5-flash",
        "options": {}
      },
      "credentials": {
        "openRouterApi": {
          "id": "QqgKARn52qQiKICN",
          "name": "OpenRouter account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "42035af6-2e15-424a-86b6-9c536476b52d",
      "name": "Get All Contacts",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        32,
        -32
      ],
      "parameters": {
        "options": {},
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nZ8a7MCU-Ku99cRsBkyer-zUPUb-QcMBzovzU3E-IH4/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1nZ8a7MCU-Ku99cRsBkyer-zUPUb-QcMBzovzU3E-IH4",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nZ8a7MCU-Ku99cRsBkyer-zUPUb-QcMBzovzU3E-IH4/edit?usp=drivesdk",
          "cachedResultName": "Contact List Template"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "vWEw7oberM64Wqxn",
          "name": "sam@openpaws.ai Google Sheets"
        }
      },
      "retryOnFail": true,
      "typeVersion": 4.5,
      "waitBetweenTries": 5000
    },
    {
      "id": "4ac06442-ecd0-465d-ba9c-4830198b1783",
      "name": "Filter Out Processed Contacts",
      "type": "n8n-nodes-base.filter",
      "position": [
        256,
        -32
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "2fe5592c-8923-4409-b32a-b591acf7f85f",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              },
              "leftValue": "={{ $json['Analysed?'] }}",
              "rightValue": ""
            }
          ]
        },
        "looseTypeValidation": true
      },
      "typeVersion": 2.2
    },
    {
      "id": "8b250c01-9509-4c12-9d2a-d7bc68f9c06c",
      "name": "Limit to 1",
      "type": "n8n-nodes-base.limit",
      "position": [
        464,
        -32
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "22d033ce-6163-4618-a4f7-18d346bc842b",
      "name": "Find Social Media Links",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        672,
        -32
      ],
      "parameters": {
        "options": {},
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "k053fXGjIF7dUIQZ",
          "cachedResultName": "\u267b\ufe0f \ud83e\udde9 \ud83d\udcda General Research Agent"
        },
        "workflowInputs": {
          "value": {
            "chatInput": "=Find the social media profile URLs for this individual or company across all major platforms. Return the results in a structured JSON format with null values for any platforms where the profile couldn't be found. Include the following platforms:\n\n1. Twitter/X\n2. LinkedIn\n3. Facebook\n4. Instagram\n5. YouTube\n6. TikTok\n7. Reddit\n8. Mastodon\n9. Truth Social\n10. Threads\n11. Bluesky\n12. Pinterest\n13. Snapchat\n14. Telegram\n15. WhatsApp Business\n16. Medium\n17. GitHub\n18. Twitch\n\nFor each platform, provide either:\n- The direct URL to the verified profile\n- Null if no profile exists or couldn't be found\n\nFormat the response as a JSON object with platform names as keys:\n\n{\n  \"twitter\": \"https://twitter.com/example\",\n  \"linkedin\": \"https://linkedin.com/in/example\",\n  \"facebook\": \"https://facebook.com/example\",\n  \"instagram\": \"https://instagram.com/example\",\n  \"youtube\": \"https://youtube.com/example\",\n  \"tiktok\": \"https://tiktok.com/@example\",\n  \"reddit\": \"https://reddit.com/user/example\",\n  \"mastodon\": \"https://mastodon.social/@example\",\n  \"truth_social\": \"https://truthsocial.com/@example\",\n  \"threads\": \"https://threads.net/@example\",\n  \"bluesky\": \"https://bsky.app/profile/example.bsky.social\",\n  \"pinterest\": \"https://pinterest.com/example\",\n  \"snapchat\": \"https://snapchat.com/add/example\",\n  \"telegram\": \"https://t.me/example\",\n  \"whatsapp_business\": \"https://wa.me/example\",\n  \"medium\": \"https://medium.com/@example\",\n  \"github\": \"https://github.com/example\",\n  \"twitch\": \"https://twitch.tv/example\"\n}\n\nWhen searching:\n\n    Prioritize verified accounts when available\n    Check common variations of the name (first name, last name, initials, nicknames)\n    If multiple potential matches exist, choose the most likely one based on context\n\nAdditional instructions:\n\n    If the contact is a business or organization, look for official company pages\n    For public figures, check both personal and official accounts\n    For researchers or academics, check ResearchGate and Academia.edu\n    For developers, check Stack Overflow and Dev.to\n    For journalists, check Substack and other publishing platforms\n\n# INPUT (this is the individual or company whose social media links you are looking for)\n\n{{ JSON.stringify($json) }}",
            "sessionId": "={{ (Math.random().toString(36).substring(2) + Date.now().toString(36)) }}"
          },
          "schema": [
            {
              "id": "chatInput",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "chatInput",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "sessionId",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "sessionId",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "e244c667-8205-48cd-9821-a6b1519b6902",
      "name": "Structure Response",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        896,
        -32
      ],
      "parameters": {
        "text": "={{ $json.output }}",
        "options": {},
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Social Media Profiles Schema\",\n  \"description\": \"A schema for capturing social media profile URLs for any contact\",\n  \"type\": \"object\",\n  \"required\": [\n    \"twitter\",\n    \"linkedin\",\n    \"facebook\",\n    \"instagram\",\n    \"youtube\",\n    \"tiktok\",\n    \"reddit\",\n    \"mastodon\",\n    \"truth_social\",\n    \"threads\",\n    \"bluesky\",\n    \"pinterest\",\n    \"snapchat\",\n    \"telegram\",\n    \"whatsapp_business\",\n    \"medium\",\n    \"github\",\n    \"twitch\"\n  ],\n  \"properties\": {\n    \"twitter\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Twitter/X profile. Must be null if no profile exists.\"\n    },\n    \"linkedin\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to LinkedIn profile. Must be null if no profile exists.\"\n    },\n    \"facebook\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Facebook profile. Must be null if no profile exists.\"\n    },\n    \"instagram\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Instagram profile. Must be null if no profile exists.\"\n    },\n    \"youtube\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to YouTube channel. Must be null if no profile exists.\"\n    },\n    \"tiktok\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to TikTok profile. Must be null if no profile exists.\"\n    },\n    \"reddit\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Reddit profile. Must be null if no profile exists.\"\n    },\n    \"mastodon\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Mastodon profile. Must be null if no profile exists.\"\n    },\n    \"truth_social\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Truth Social profile. Must be null if no profile exists.\"\n    },\n    \"threads\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Threads profile. Must be null if no profile exists.\"\n    },\n    \"bluesky\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Bluesky profile. Must be null if no profile exists.\"\n    },\n    \"pinterest\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Pinterest profile. Must be null if no profile exists.\"\n    },\n    \"snapchat\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Snapchat profile. Must be null if no profile exists.\"\n    },\n    \"telegram\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Telegram profile. Must be null if no profile exists.\"\n    },\n    \"whatsapp_business\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to WhatsApp Business profile. Must be null if no profile exists.\"\n    },\n    \"medium\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Medium profile. Must be null if no profile exists.\"\n    },\n    \"github\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to GitHub profile. Must be null if no profile exists.\"\n    },\n    \"twitch\": {\n      \"type\": [\"string\", \"null\"],\n      \"format\": \"uri\",\n      \"description\": \"URL to Twitch profile. Must be null if no profile exists.\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"examples\": [\n    {\n      \"twitter\": \"https://twitter.com/example\",\n      \"linkedin\": null,\n      \"facebook\": \"https://facebook.com/example\",\n      \"instagram\": null,\n      \"youtube\": \"https://youtube.com/example\",\n      \"tiktok\": null,\n      \"reddit\": \"https://reddit.com/user/example\",\n      \"mastodon\": null,\n      \"truth_social\": null,\n      \"threads\": null,\n      \"bluesky\": null,\n      \"pinterest\": null,\n      \"snapchat\": null,\n      \"telegram\": null,\n      \"whatsapp_business\": null,\n      \"medium\": \"https://medium.com/@example\",\n      \"github\": null,\n      \"twitch\": null\n    },\n    {\n      \"twitter\": null,\n      \"linkedin\": \"https://linkedin.com/in/example\",\n      \"facebook\": null,\n      \"instagram\": null,\n      \"youtube\": null,\n      \"tiktok\": null,\n      \"reddit\": null,\n      \"mastodon\": null,\n      \"truth_social\": null,\n      \"threads\": null,\n      \"bluesky\": null,\n      \"pinterest\": null,\n      \"snapchat\": null,\n      \"telegram\": null,\n      \"whatsapp_business\": null,\n      \"medium\": null,\n      \"github\": \"https://github.com/example\",\n      \"twitch\": null\n    }\n  ]\n}"
      },
      "typeVersion": 1.2
    },
    {
      "id": "22503521-d238-4912-bd9f-3f50c2c1b933",
      "name": "Update Contact",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1264,
        -32
      ],
      "parameters": {
        "columns": {
          "value": {
            "github": "={{ $json.output.github }}",
            "medium": "={{ $json.output.medium }}",
            "reddit": "={{ $json.output.reddit }}",
            "tiktok": "={{ $json.output.tiktok }}",
            "twitch": "={{ $json.output.twitch }}",
            "bluesky": "={{ $json.output.bluesky }}",
            "threads": "={{ $json.output.threads }}",
            "twitter": "={{ $json.output.twitter }}",
            "youtube": "={{ $json.output.youtube }}",
            "facebook": "={{ $json.output.facebook }}",
            "linkedin": "={{ $json.output.linkedin }}",
            "mastodon": "={{ $json.output.mastodon }}",
            "snapchat": "={{ $json.output.snapchat }}",
            "telegram": "={{ $json.output.telegram }}",
            "instagram": "={{ $json.output.instagram }}",
            "pinterest": "={{ $json.output.pinterest }}",
            "row_number": "={{ $('Limit to 1').item.json.row_number }}",
            "truth_social": "={{ $json.output.truth_social }}",
            "whatsapp_business": "={{ $json.output.whatsapp_business }}"
          },
          "schema": [
            {
              "id": "Analysed?",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Analysed?",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "twitter",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "twitter",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "linkedin",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "linkedin",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "facebook",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "facebook",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "instagram",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "instagram",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "youtube",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "youtube",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "tiktok",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "tiktok",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "reddit",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "reddit",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "mastodon",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "mastodon",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "truth_social",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "truth_social",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "threads",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "threads",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "bluesky",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "bluesky",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "pinterest",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "pinterest",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "snapchat",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "snapchat",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "telegram",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "telegram",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "whatsapp_business",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "whatsapp_business",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "medium",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "medium",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "github",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "github",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "twitch",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "twitch",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "PASTE ALL NAMES & KNOWN CONTACT DETAILS HERE",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "PASTE ALL NAMES & KNOWN CONTACT DETAILS HERE",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "type": "number",
              "display": true,
              "removed": false,
              "readOnly": true,
              "required": false,
              "displayName": "row_number",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "row_number"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "update",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nZ8a7MCU-Ku99cRsBkyer-zUPUb-QcMBzovzU3E-IH4/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1nZ8a7MCU-Ku99cRsBkyer-zUPUb-QcMBzovzU3E-IH4",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nZ8a7MCU-Ku99cRsBkyer-zUPUb-QcMBzovzU3E-IH4/edit?usp=drivesdk",
          "cachedResultName": "Contact List Template"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "vWEw7oberM64Wqxn",
          "name": "sam@openpaws.ai Google Sheets"
        }
      },
      "retryOnFail": true,
      "typeVersion": 4.5,
      "waitBetweenTries": 5000
    },
    {
      "id": "13d7a754-aa74-4975-a489-fd1e4e307525",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -752,
        -496
      ],
      "parameters": {
        "width": 448,
        "height": 416,
        "content": "# \ud83e\udded Workflow Overview\n\nThis n8n workflow automates the process of finding and storing social media profile links for a list of contacts.\n\n## \ud83d\udca1 How It Works\n1. Pulls unprocessed contacts from a Google Sheet.\n2. Sends the contact info to a research subworkflow that uses AI tools to find social media profiles.\n3. Validates and structures the results.\n4. Updates the original sheet with found links and marks the contact as \"Analysed\".\n\n\ud83d\udd01 The workflow runs automatically on a schedule and processes one contact per execution.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "24536b2b-f0ac-4897-afa4-9a05bfb663a8",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -272,
        -496
      ],
      "parameters": {
        "width": 624,
        "height": 416,
        "content": "# \ud83d\udcc4 Google Sheet Setup Instructions\n\n\ud83d\udccb Template:  \nhttps://docs.google.com/spreadsheets/d/1nZ8a7MCU-Ku99cRsBkyer-zUPUb-QcMBzovzU3E-IH4/edit?usp=sharing\n\n## \u2705 How to Use the Template\n1. **Make a copy** of the Google Sheet into your own Drive.\n2. Paste your contact list beside the preset columnns\n3. In the `Analysed?` column, enter `false` (no quotes) for every new row.\n4. Do not remove or rename existing columns except for the `PASTE ALL NAMES & KNOWN CONTACT DETAILS HERE` column\n\nThe workflow updates each row once processed. Make sure the \"Analysed?\" flag is set properly.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "644a7f23-8c59-45e3-8a92-6f112cad326f",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        384,
        -496
      ],
      "parameters": {
        "width": 448,
        "height": 416,
        "content": "# \ud83e\udde0 Subworkflow: Find Social Media Links\n\nCalls this reusable agent:  \n\ud83d\udd17 https://n8n.io/workflows/5588-multi-tool-research-agent-for-animal-advocacy-with-openrouter-serper-and-open-paws-db/\n\n## What It Does:\n- Searches for the contact\u2019s profiles on 18+ platforms:\n  Twitter, LinkedIn, Facebook, YouTube, Reddit, TikTok, GitHub, etc.\n- Prioritizes verified or official accounts\n- Outputs a JSON object with either a link or `null` per platform"
      },
      "typeVersion": 1
    },
    {
      "id": "7033615b-efdc-4d34-b6a3-063d9d3ef14d",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        864,
        -496
      ],
      "parameters": {
        "width": 336,
        "height": 416,
        "content": "# \ud83e\uddf1 Structure and Validate Response\n\nUses a strict schema to:\n- Ensure the JSON is valid and well-formed\n- Normalize missing profiles to `null`\n- Confirm all 18+ platforms are present as keys\n\n\u2705 Prevents malformed or unexpected results from reaching the sheet.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "474fd9e7-36c7-4502-9e6a-f88a91f56028",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1232,
        -496
      ],
      "parameters": {
        "width": 320,
        "height": 416,
        "content": "# \ud83d\udcdd Google Sheets: Update Contact\n\nWrites the results back into the **same row** in the original sheet.\n\n- Fills in all social media columns with URLs or `null`\n- Sets `Analysed?` to `true`\n- Uses `row_number` to update the correct contact\n\n\ud83d\udccc Final step to mark the contact as completed!\n"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1a5e2061-4cf6-493b-8ee9-8f3e4aa3c71d",
  "connections": {
    "Limit to 1": {
      "main": [
        [
          {
            "node": "Find Social Media Links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Contacts": {
      "main": [
        [
          {
            "node": "Filter Out Processed Contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get All Contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structure Response": {
      "main": [
        [
          {
            "node": "Update Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Structure Response",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Find Social Media Links": {
      "main": [
        [
          {
            "node": "Structure Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Out Processed Contacts": {
      "main": [
        [
          {
            "node": "Limit to 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Automate Multi-Platform Social Media Lookup from Google Sheets with Gemini AI",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/6673",
    "scraped_at": "2025-08-21 04:43:04",
    "workflow_id": "a0434f69-217d-5c68-9356-9607fc0be03c"
  },
  "_filename": "Automate_Multi_Platform_Social_Media_Lookup_from_Google_Sheets_with_Gemini_AI.json"
}