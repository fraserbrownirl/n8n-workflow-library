{
  "id": "WRRD0ixNMkgqkkL4",
  "meta": {
    "instanceId": "21b41c2deb1c9e3f543253a0aa6a6e2c7bd7ef6bab90ffd478aa947c17d3b352",
    "templateCredsSetupCompleted": true
  },
  "name": "Linear to Productboard",
  "tags": [
    {
      "id": "6Ek7V8f4xbM9vWLj",
      "name": "linear",
      "createdAt": "2024-11-08T12:12:15.330Z",
      "updatedAt": "2024-11-08T12:12:15.330Z"
    },
    {
      "id": "XpcIJ8IHNenz3bWz",
      "name": "productboard",
      "createdAt": "2024-11-08T12:12:17.249Z",
      "updatedAt": "2024-11-08T12:12:17.249Z"
    }
  ],
  "nodes": [
    {
      "id": "fc305761-ded9-4709-8d9c-d691181c671d",
      "name": "get productboard feature id",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1160,
        -40
      ],
      "parameters": {
        "url": "https://api.productboard.com/hierarchy-entities/custom-fields-values",
        "options": {
          "pagination": {
            "pagination": {
              "nextURL": "={{ $response.body[\"links\"][\"next\"].replace(/&?customField\\.id=[^&]+/, '') }}",
              "paginationMode": "responseContainsNextURL",
              "requestInterval": 3000,
              "completeExpression": "={{ $response.body[\"links\"][\"next\"] === null }}",
              "paginationCompleteWhen": "other"
            }
          }
        },
        "sendQuery": true,
        "sendHeaders": true,
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "queryParameters": {
          "parameters": [
            {
              "name": "customField.id",
              "value": "4a5e6618-a5fc-452d-8828-1291e1c8d8fc"
            }
          ]
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Version",
              "value": "1"
            }
          ]
        }
      },
      "credentials": {
        "httpHeaderAuth": {
          "id": "Z0ptr85smbBZBIYx",
          "name": "Productboard connection"
        }
      },
      "typeVersion": 4.1
    },
    {
      "id": "dc41c19e-7db4-43ae-82fa-ada345413e27",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        1400,
        -40
      ],
      "parameters": {
        "options": {},
        "fieldToSplitOut": "data"
      },
      "typeVersion": 1
    },
    {
      "id": "d77817a8-ddd7-424b-980e-1eae3af093c9",
      "name": "Slack",
      "type": "n8n-nodes-base.slack",
      "position": [
        4020,
        -160
      ],
      "webhookId": "6d29de75-0650-4776-ab33-b1e76f8e5755",
      "parameters": {
        "text": "=:linear: {{ $json.data.name }} with status {{ $json.data.status.name }} and dates {{ $json.data.timeframe.startDate }} - {{ $json.data.timeframe.endDate }} updated :productboard: {{ $json.data.links.html }}.",
        "select": "channel",
        "blocksUi": "={\n  \"blocks\": [\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \":linear: to :productboard: update\\n\\n*{{ $json.data.name }}*\\n\\n*Status:* {{ $json.data.status.name }}\\n*:dart: date:* {{ $json[\"data\"][\"timeframe\"][\"endDate\"] && $json[\"data\"][\"timeframe\"][\"endDate\"] !== \"none\" ? new Date($json[\"data\"][\"timeframe\"][\"endDate\"]).toLocaleDateString(\"en-US\", { month: \"long\", year: \"numeric\" }) : \"none\" }}\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"You can view the update in Productboard using the link below:\"\n      },\n      \"accessory\": {\n        \"type\": \"button\",\n        \"text\": {\n          \"type\": \"plain_text\",\n          \"text\": \"Open Productboard\"\n        },\n        \"url\": \"{{ $json.data.links.html }}\"\n      }\n    }\n  ]\n}\n",
        "channelId": {
          "__rl": true,
          "mode": "name",
          "value": "#product-notifications"
        },
        "messageType": "block",
        "otherOptions": {}
      },
      "credentials": {
        "slackApi": {
          "id": "SG3oDwwLGpxwoJSO",
          "name": "Slack connection"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "b3fb1d65-c607-44a3-b85b-480c42373075",
      "name": "get productboard feature details",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2480,
        -40
      ],
      "parameters": {
        "url": "=https://api.productboard.com/features/{{ $json.feature_id }}",
        "options": {},
        "sendHeaders": true,
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Version",
              "value": "1"
            }
          ]
        }
      },
      "credentials": {
        "httpHeaderAuth": {
          "id": "Z0ptr85smbBZBIYx",
          "name": "Productboard connection"
        }
      },
      "typeVersion": 4.1
    },
    {
      "id": "935fe09f-482b-4def-ab9b-771214e9c1f0",
      "name": "Core",
      "type": "n8n-nodes-base.linearTrigger",
      "position": [
        80,
        460
      ],
      "webhookId": "a3e9a42a-2cee-47e0-b79d-cfdcfdfcb95f",
      "parameters": {
        "teamId": "84ecb508-10a1-4269-a3b1-4f3aede1174b",
        "resources": [
          "project",
          "issue"
        ]
      },
      "credentials": {
        "linearApi": {
          "id": "ouF2BhoNRdN8dUkD",
          "name": "Linear connection"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "debfea20-4aed-4491-b863-3198f74194ed",
      "name": "NHI",
      "type": "n8n-nodes-base.linearTrigger",
      "position": [
        80,
        180
      ],
      "webhookId": "50716034-b846-4fd1-bd5c-ea95405074f3",
      "parameters": {
        "teamId": "8434c5f8-1ce0-4733-949d-ef6a095c27fd",
        "resources": [
          "project",
          "issue"
        ]
      },
      "credentials": {
        "linearApi": {
          "id": "ouF2BhoNRdN8dUkD",
          "name": "Linear connection"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "9dac9c62-3c55-42c3-80ca-43132fe8e3cf",
      "name": "Source",
      "type": "n8n-nodes-base.linearTrigger",
      "position": [
        80,
        -80
      ],
      "webhookId": "23fb2eb5-0e86-4c99-9143-8185a0c19bb3",
      "parameters": {
        "teamId": "b55ac86d-caba-4da5-b175-a5f1e23d3f38",
        "resources": [
          "project",
          "issue"
        ]
      },
      "credentials": {
        "linearApi": {
          "id": "ouF2BhoNRdN8dUkD",
          "name": "Linear connection"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "5e5bb22a-6ddd-48e8-9a1f-851dad5adda5",
      "name": "Private Incidents",
      "type": "n8n-nodes-base.linearTrigger",
      "position": [
        80,
        -320
      ],
      "webhookId": "668c5058-4ef2-435b-8e37-56667cce9e1d",
      "parameters": {
        "teamId": "e9038367-24ab-400a-a7e5-e4da0a2f8d14",
        "resources": [
          "project",
          "issue"
        ]
      },
      "credentials": {
        "linearApi": {
          "id": "ouF2BhoNRdN8dUkD",
          "name": "Linear connection"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "e1d8f679-f3fc-498f-a09c-f9d6d853dcf4",
      "name": "Secret detection",
      "type": "n8n-nodes-base.linearTrigger",
      "position": [
        80,
        -580
      ],
      "webhookId": "b7c7061d-e799-47e9-860a-b848a806334e",
      "parameters": {
        "teamId": "0bde494b-2eed-4287-9f24-e0c15d3aa71d",
        "resources": [
          "project",
          "issue"
        ]
      },
      "credentials": {
        "linearApi": {
          "id": "ouF2BhoNRdN8dUkD",
          "name": "Linear connection"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "39a7cec3-388d-477f-b965-a428648b6740",
      "name": "Self-Hosted",
      "type": "n8n-nodes-base.linearTrigger",
      "position": [
        80,
        740
      ],
      "webhookId": "114ed731-b78e-4da5-b3df-23bf3f8637d9",
      "parameters": {
        "teamId": "78588eb3-41df-4a7f-813e-6cb62d48155b",
        "resources": [
          "project",
          "issue"
        ]
      },
      "credentials": {
        "linearApi": {
          "id": "ouF2BhoNRdN8dUkD",
          "name": "Linear connection"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "11b41a41-9a8d-4c2c-aba1-ad90717881a6",
      "name": "If linear action is update",
      "type": "n8n-nodes-base.if",
      "position": [
        2760,
        -40
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "5eb3de2f-93de-4c36-a2b9-8db6cc581656",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $('mapping Linear status to Productboard status').item.json.action }}",
              "rightValue": "update"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "18931908-7f39-4868-8b29-2cb1769559fa",
      "name": "mapping Linear status to Productboard status",
      "type": "n8n-nodes-base.code",
      "position": [
        840,
        -40
      ],
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let linearStatus;\n// Check if URL contains \"/project/\" if not is an issue\nif ($json.url.includes('/project/')) {\n  linearStatus = $json.data.status.name;\n} else {\n  linearStatus =$json.data.state.type;\n}\nlet productboardStatus;\n\nswitch(linearStatus) {\n  case 'Backlog':\n    productboardStatus = 'Candidate';\n    break;\n  case 'backlog':\n    productboardStatus = 'Candidate';\n    break;\n  case 'triage':\n    productboardStatus = 'Candidate';\n    break;\n  case 'Planned':\n    productboardStatus = 'Planned';\n    break;\n  case 'Paused':\n    productboardStatus = 'Planned';\n    break;\n  case 'unstarted':\n    productboardStatus = 'Planned';\n    break;\n  case 'In Progress':\n    productboardStatus = 'In progress';\n    break;\n  case 'started':\n    productboardStatus = 'In progress';\n    break;\n  case 'completed':\n    productboardStatus = 'Released';\n    break;\n  case 'Completed':\n    productboardStatus = 'Released';\n    break;\n  case 'Canceled':\n    productboardStatus = 'Won\\'t do';\n    break;\n  case 'canceled':\n    productboardStatus = 'Won\\'t do';\n    break;\n  default:\n    productboardStatus = 'Unknown'; // Error\n}\n\nreturn {\n  ...$json,\n  linear_status_mapped: productboardStatus\n};\n"
      },
      "typeVersion": 2
    },
    {
      "id": "6426a47b-5b55-4842-8f3c-73cca09377e3",
      "name": "ML",
      "type": "n8n-nodes-base.linearTrigger",
      "position": [
        80,
        -820
      ],
      "webhookId": "459774f0-c8f4-4c5f-a85a-ce121c44f65a",
      "parameters": {
        "teamId": "85cf5fb1-6b11-47c6-8c7d-637674ecc89b",
        "resources": [
          "project",
          "issue"
        ]
      },
      "credentials": {
        "linearApi": {
          "id": "ouF2BhoNRdN8dUkD",
          "name": "Linear connection"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "12850488-3843-43c8-aeae-2e2bf0bfd6cf",
      "name": "Linear URL in productboard Project",
      "type": "n8n-nodes-base.set",
      "position": [
        1880,
        -180
      ],
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "productboard_linear_url",
              "stringValue": "={{ $json['value'].match('^(https:\\/\\/linear\\.app\\/[^\\/]+\\/project\\/[^\\/]+)')[0] }}"
            },
            {
              "name": "feature_id",
              "stringValue": "={{ $json['hierarchyEntity'].id }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "typeVersion": 3.2
    },
    {
      "id": "a12cf4ff-66eb-42f0-8585-eb2f9d880d98",
      "name": "Linear URL in productboard Issue",
      "type": "n8n-nodes-base.set",
      "position": [
        1880,
        80
      ],
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "productboard_linear_url",
              "stringValue": "={{ $json['value'] }}"
            },
            {
              "name": "feature_id",
              "stringValue": "={{ $json['hierarchyEntity'].id }}"
            }
          ]
        },
        "include": "none",
        "options": {}
      },
      "typeVersion": 3.2
    },
    {
      "id": "c0ca7046-803c-4a45-9e1e-0e326a0c9334",
      "name": "Project or Issue",
      "type": "n8n-nodes-base.if",
      "position": [
        1620,
        -40
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "b4f345a6-f219-4281-a379-7cbb018cdc56",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $('mapping Linear status to Productboard status').item.json.url }}",
              "rightValue": "/project/"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "8168320e-51ce-46f2-ba7e-091ca549dd43",
      "name": "update productboard status & timeframe when Linear Project",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3700,
        -160
      ],
      "parameters": {
        "url": "=https://api.productboard.com/features/{{ $('get productboard feature details').item.json.data.id }}",
        "method": "PATCH",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        },
        "jsonBody": "={\n  \"data\": {\n    \"status\": {\n      \"name\": \"{{ $('mapping Linear status to Productboard status').item.json.linear_status_mapped }}\"\n    },\n    \"timeframe\": {\n      {{ $('mapping Linear status to Productboard status').item.json.data.targetDate ? '\"granularity\": \"month\",': '\"granularity\": \"none\",'}}\n      {{ $('mapping Linear status to Productboard status').item.json.data.targetDate ? '\"startDate\": \"' + $('mapping Linear status to Productboard status').item.json.data.targetDate.substring(0, 7) + '-01' +'\",': '\"startDate\": \"none\",'}}\n      {{ $('mapping Linear status to Productboard status').item.json.data.targetDate \n        ? (() => {\n            const date = new Date($('mapping Linear status to Productboard status').item.json.data.targetDate);\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            const lastDay = new Date(year, month, 0).getDate();\n            return `\"endDate\": \"${year}-${month.toString().padStart(2, '0')}-${lastDay}\"`;\n          })() \n        : '\"endDate\": \"none\"'}}\n    }\n  }\n}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Version",
              "value": "1"
            },
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        }
      },
      "credentials": {
        "httpHeaderAuth": {
          "id": "Z0ptr85smbBZBIYx",
          "name": "Productboard connection"
        }
      },
      "typeVersion": 4.1
    },
    {
      "id": "40e4ebdd-cd3c-4b49-88c3-daf0a9683c3c",
      "name": "update productboard status & timeframe when Linear Issue",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3700,
        40
      ],
      "parameters": {
        "url": "=https://api.productboard.com/features/{{ $('get productboard feature details').item.json.data.id }}",
        "method": "PATCH",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        },
        "jsonBody": "={\n  \"data\": {\n    \"status\": {\n      \"name\": \"{{ $('mapping Linear status to Productboard status').item.json.linear_status_mapped }}\"\n    },\n    \"timeframe\": {\n      {{ $('mapping Linear status to Productboard status').item.json.data.dueDate ? '\"granularity\": \"month\",': '\"granularity\": \"none\",'}}\n      {{ $('mapping Linear status to Productboard status').item.json.data.dueDate ? '\"startDate\": \"' + $('mapping Linear status to Productboard status').item.json.data.dueDate.substring(0, 7) + '-01' +'\",': '\"startDate\": \"none\",'}}\n      {{ $('mapping Linear status to Productboard status').item.json.data.dueDate \n        ? (() => {\n            const date = new Date($('mapping Linear status to Productboard status').item.json.data.dueDate);\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            const lastDay = new Date(year, month, 0).getDate();\n            return `\"endDate\": \"${year}-${month.toString().padStart(2, '0')}-${lastDay}\"`;\n          })() \n        : '\"endDate\": \"none\"'}}\n    }\n  }\n}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Version",
              "value": "1"
            },
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        }
      },
      "credentials": {
        "httpHeaderAuth": {
          "id": "Z0ptr85smbBZBIYx",
          "name": "Productboard connection"
        }
      },
      "typeVersion": 4.1
    },
    {
      "id": "4f7f3a8f-4e65-4a51-aca1-5d2a0847263e",
      "name": "Project or Issue (2)",
      "type": "n8n-nodes-base.if",
      "position": [
        3120,
        -60
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "4176cda1-3a11-4d8a-a6e4-a9f647611fd9",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $('mapping Linear status to Productboard status').item.json.url }}",
              "rightValue": "/project/"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "e0447361-9a9c-47a0-aa0e-7962cd713f6e",
      "name": "Slack1",
      "type": "n8n-nodes-base.slack",
      "position": [
        4020,
        40
      ],
      "webhookId": "1b4f9bce-8113-41bc-8dbe-2bd46090b257",
      "parameters": {
        "text": "=:linear: {{ $json.data.name }} with status {{ $json.data.status.name }} and dates {{ $json.data.timeframe.startDate }} - {{ $json.data.timeframe.endDate }} updated :productboard: {{ $json.data.links.html }}.",
        "select": "channel",
        "blocksUi": "={\n  \"blocks\": [\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \":linear: to :productboard: update\\n\\n*{{ $json.data.name }}*\\n\\n*Status:* {{ $json.data.status.name }}\\n*:dart: date:* {{ $json[\"data\"][\"timeframe\"][\"endDate\"] && $json[\"data\"][\"timeframe\"][\"endDate\"] !== \"none\" ? new Date($json[\"data\"][\"timeframe\"][\"endDate\"]).toLocaleDateString(\"en-US\", { month: \"long\", year: \"numeric\" }) : \"none\" }}\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"You can view the update in Productboard using the link below:\"\n      },\n      \"accessory\": {\n        \"type\": \"button\",\n        \"text\": {\n          \"type\": \"plain_text\",\n          \"text\": \"Open Productboard\"\n        },\n        \"url\": \"{{ $json.data.links.html }}\"\n      }\n    }\n  ]\n}\n",
        "channelId": {
          "__rl": true,
          "mode": "name",
          "value": "#product-notifications"
        },
        "messageType": "block",
        "otherOptions": {}
      },
      "credentials": {
        "slackApi": {
          "id": "SG3oDwwLGpxwoJSO",
          "name": "Slack connection"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "43116351-c41b-4363-9b18-05f68f6aae37",
      "name": "Status or Date changed for Linear Project",
      "type": "n8n-nodes-base.if",
      "position": [
        3440,
        -140
      ],
      "parameters": {
        "options": {
          "looseTypeValidation": true
        },
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "f53c6eb9-61cc-4cf9-bbb6-03cc9f78b6b1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              },
              "leftValue": "={{ $('mapping Linear status to Productboard status').item.json.linear_status_mapped }}",
              "rightValue": "={{ $('get productboard feature details').item.json.data.status.name }}"
            },
            {
              "id": "a61b4bca-47b0-48bb-b93f-ba9a419740d0",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              },
              "leftValue": "={{  $('mapping Linear status to Productboard status').item.json.data.targetDate\n        ? (() => {\n            const date = new Date($('mapping Linear status to Productboard status').item.json.data.targetDate);\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            const lastDay = new Date(year, month, 0).getDate();\n            return `${year}-${month.toString().padStart(2, '0')}-${lastDay}`;\n          })() \n        : 'none'}}",
              "rightValue": "={{ $json.data.timeframe.endDate }}"
            }
          ]
        }
      },
      "typeVersion": 2
    },
    {
      "id": "de8f968f-ffd9-47a1-a83c-2bb77ffa1b2e",
      "name": "Status or Date changed for Linear Issue",
      "type": "n8n-nodes-base.if",
      "position": [
        3440,
        60
      ],
      "parameters": {
        "options": {
          "looseTypeValidation": true
        },
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "f53c6eb9-61cc-4cf9-bbb6-03cc9f78b6b1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              },
              "leftValue": "={{ $('mapping Linear status to Productboard status').item.json.linear_status_mapped }}",
              "rightValue": "={{ $('get productboard feature details').item.json.data.status.name }}"
            },
            {
              "id": "65e1f371-b644-4d36-b52d-df32f3403ff5",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              },
              "leftValue": "={{  $('mapping Linear status to Productboard status').item.json.data.dueDate\n        ? (() => {\n            const date = new Date($('mapping Linear status to Productboard status').item.json.data.dueDate);\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            const lastDay = new Date(year, month, 0).getDate();\n            return `${year}-${month.toString().padStart(2, '0')}-${lastDay}`;\n          })() \n        : 'none'}}",
              "rightValue": "={{ $json.data.timeframe.endDate }}"
            }
          ]
        }
      },
      "typeVersion": 2
    },
    {
      "id": "65ad13d3-249a-4a62-a2f9-41efa4796682",
      "name": "If match for project",
      "type": "n8n-nodes-base.if",
      "position": [
        2140,
        -180
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "af7fef97-d427-4cee-a371-536e24fa47c0",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.productboard_linear_url.match(/([a-f0-9]{12})$/)?.[1] }}",
              "rightValue": "={{ $('mapping Linear status to Productboard status').item.json.data.slugId }}"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "b43e08a2-2e0c-4dac-8882-5399ad8467ed",
      "name": "If match for issue",
      "type": "n8n-nodes-base.if",
      "position": [
        2140,
        80
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "af7fef97-d427-4cee-a371-536e24fa47c0",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.productboard_linear_url.match(/issue\\/([A-Z]+-\\d+)/)?.[1] }}",
              "rightValue": "={{ $('mapping Linear status to Productboard status').item.json.data.identifier }}"
            }
          ]
        }
      },
      "typeVersion": 2.2
    }
  ],
  "active": true,
  "pinData": {},
  "settings": {
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "WRas2GJ7w02TmUYO",
    "executionOrder": "v1",
    "timeSavedPerExecution": 30
  },
  "versionId": "b1b2c015-24b9-47d0-a0cc-6a4d3fe15efe",
  "connections": {
    "ML": {
      "main": [
        [
          {
            "node": "mapping Linear status to Productboard status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NHI": {
      "main": [
        [
          {
            "node": "mapping Linear status to Productboard status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Core": {
      "main": [
        [
          {
            "node": "mapping Linear status to Productboard status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Source": {
      "main": [
        [
          {
            "node": "mapping Linear status to Productboard status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Project or Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Self-Hosted": {
      "main": [
        [
          {
            "node": "mapping Linear status to Productboard status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Project or Issue": {
      "main": [
        [
          {
            "node": "Linear URL in productboard Project",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Linear URL in productboard Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Secret detection": {
      "main": [
        [
          {
            "node": "mapping Linear status to Productboard status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Private Incidents": {
      "main": [
        [
          {
            "node": "mapping Linear status to Productboard status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If match for issue": {
      "main": [
        [
          {
            "node": "get productboard feature details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If match for project": {
      "main": [
        [
          {
            "node": "get productboard feature details",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Project or Issue (2)": {
      "main": [
        [
          {
            "node": "Status or Date changed for Linear Project",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Status or Date changed for Linear Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If linear action is update": {
      "main": [
        [
          {
            "node": "Project or Issue (2)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get productboard feature id": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Linear URL in productboard Issue": {
      "main": [
        [
          {
            "node": "If match for issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get productboard feature details": {
      "main": [
        [
          {
            "node": "If linear action is update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Linear URL in productboard Project": {
      "main": [
        [
          {
            "node": "If match for project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status or Date changed for Linear Issue": {
      "main": [
        [
          {
            "node": "update productboard status & timeframe when Linear Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status or Date changed for Linear Project": {
      "main": [
        [
          {
            "node": "update productboard status & timeframe when Linear Project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mapping Linear status to Productboard status": {
      "main": [
        [
          {
            "node": "get productboard feature id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update productboard status & timeframe when Linear Issue": {
      "main": [
        [
          {
            "node": "Slack1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update productboard status & timeframe when Linear Project": {
      "main": [
        [
          {
            "node": "Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Linear Project to Productboard feature Sync",
    "used_count": 15,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/2578",
    "scraped_at": "2025-08-17 17:45:10"
  }
}