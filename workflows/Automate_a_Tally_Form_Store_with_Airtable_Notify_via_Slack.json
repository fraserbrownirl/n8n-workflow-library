{
  "id": "FAXXZxHUVDbVzDdf",
  "meta": {
    "instanceId": "18b0d04ad5030054be4ab49562e84ea4a079ab4cb036003697394140227c7e76",
    "templateCredsSetupCompleted": true
  },
  "name": "Daily Task Reminder System : Airtable to Slack Automated Notifications",
  "tags": [],
  "nodes": [
    {
      "id": "e1ead24d-88ca-4ced-84a0-ba43cf6f37c1",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        592,
        832
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9
            }
          ]
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "e6c3deb8-951e-47fc-8fd1-4e0e2e01bc8e",
      "name": "Search records",
      "type": "n8n-nodes-base.airtable",
      "position": [
        704,
        1792
      ],
      "parameters": {
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appPk6zfIQ1EbBq43",
          "cachedResultUrl": "https://airtable.com/appPk6zfIQ1EbBq43",
          "cachedResultName": "T\u00e2ches"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tblLkuoQ9AYsAQ0io",
          "cachedResultUrl": "https://airtable.com/appPk6zfIQ1EbBq43/tblLkuoQ9AYsAQ0io",
          "cachedResultName": "Produits"
        },
        "options": {},
        "operation": "search",
        "filterByFormula": "={Statut} = \"En cours\""
      },
      "credentials": {
        "airtableTokenApi": {
          "id": "3eA5YxuBJCqT2R3I",
          "name": "Airtable Personal Access Token account"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "5d1a4028-c79f-48f5-8dc7-cd860276c1ce",
      "name": "Send a message",
      "type": "n8n-nodes-base.slack",
      "position": [
        768,
        3200
      ],
      "webhookId": "e25887fe-9fe2-4750-824d-3e3cf706dd6a",
      "parameters": {
        "text": "=New task for {{ $json.name }}: *{{ $json[\"Titre\"] }}* \ud83d\udc49 Deadline: {{ $json[\"Date limite\"] }}\n",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "C0945G1M3T2",
          "cachedResultName": "tous-n8n"
        },
        "otherOptions": {},
        "authentication": "oAuth2"
      },
      "credentials": {
        "slackOAuth2Api": {
          "id": "ERqGlDjoRRcGe4Qj",
          "name": "Slack account 2"
        }
      },
      "typeVersion": 2.3
    },
    {
      "id": "8568fbf1-6ffe-43b6-9516-74bc64cf3e46",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        0
      ],
      "parameters": {
        "width": 1000,
        "height": 3760,
        "content": "# Still reminding people about their tasks manually every morning?\n\nLet\u2019s be honest \u2014 who wants to start the day chasing teammates about what they need to do?\n\nWhat if Slack could do it for you \u2014 automatically, at 9 a.m. every day \u2014 without missing anything, and without you lifting a finger?\n\nIn this tutorial, you\u2019ll build a simple automation with n8n that checks Airtable for active tasks and sends reminders in Slack, daily.\n\nHere\u2019s the flow you\u2019ll build:\n\n**Schedule Trigger \u2192 Search Records (Airtable) \u2192 Send Message (Slack)**\n\n## STEP 1 : Set up your Airtable base\n\nCreate a new base called Tasks\n\nAdd a table (for example: Projects, To-Do, or anything relevant)\n\nAdd the following fields:\n\n| **Field**  | **Type**          | **Example**                 |\n|------------|-------------------|-----------------------------|\n| Title      | Text              | Finalize quote for Client A |\n| Assignee   | Text              | Baptiste Fort               |\n| Email      | Email             | claire@email.com            |\n| Status     | Single select     | In Progress / Done          |\n| Due Date   | Date (dd/mm/yyyy) | 05/07/2025                  |\n\n\nAdd a few sample tasks with the status In Progress so you can test your workflow later.\n\n## STEP 2 Create the trigger in n8n\n\nIn n8n, add a Schedule Trigger node\n\nSet it to run every day at 9:00 a.m.:\n\nTrigger interval: Days\n\nDays Between Triggers: 1\n\nTrigger at hour: 9\n\nTrigger at minute: 0\n\nThis is the node that kicks off the workflow every morning.\n\n## STEP 3 : Search for active tasks in Airtable\n\nThis step is all about connecting n8n to your Airtable base and pulling the tasks that are still marked as \"In Progress\".\n\n**1. Add the Airtable node**\n\nIn your n8n workflow, add a node called:\n\nAirtable \u2192 Search Records\n\nYou can find it by typing \"airtable\" in the node search.\n\n**2. Create your Airtable Personal Access Token**\n\n\nIf you haven\u2019t already created your Airtable token, here\u2019s how:\n\n\ud83d\udd17 Go to: [https://airtable.com/create/tokens](https://airtable.com/create/tokens)\n\nThen:\n\nName your token something like TACHES\n\nUnder Scopes, check:\n\n\u2705 data.records:read\n\nUnder Access, select only the base you want to use (e.g. \u201cT\u00e2ches\u201d)\n\nClick \u201cSave token\u201d\n\nCopy the personal token\n\n**3. Set up the Airtable credentials in n8n**\n\nIn the Airtable node:\n\nClick on the Credentials field\n\nSelect: Airtable Personal Access Token\n\nClick Create New\n\nPaste your token\n\nGive it a name like: My Airtable Token\n\nClick Save\n\n**4. Configure the node**\n\u00b2\nNow fill in the parameters:\n\nBase: T\u00e2ches\n\nTable: Produits (or T\u00e2ches, depending on what you called it)\n\nOperation: Search\n\nFilter By Formula:\n\n{Statut} = \"En cours\"\n\nReturn All: \u2705 Yes (make sure it\u2019s enabled)\n\nOutput Format: Simple\n\n**5. Test the node**\n\nClick \u201cExecute Node\u201d.\n\nYou should now see all tasks with Statut = \"En cours\" show up in the output (on the right-hand side of your screen), just like in your screenshot.\n\n## STEP 4: Send each task to Slack\n\nNow that we\u2019ve fetched all the active tasks from Airtable, let\u2019s send them to Slack \u2014 one by one \u2014 using a loop.\n\n### Add the Slack node\nDrag a new node into your n8n workflow and select:\n\nSlack \u2192 Message\n\nName it something like Send Slack Message\n\nYou can find it quickly by typing \"Slack\" into the node search bar.\n\n### Connect your Slack account\nIf you haven't already connected your Slack credentials:\n\nGo to n8n \u2192 Credentials\n\nSelect Slack API\n\nClick Create new\n\nPaste your Slack Bot Token (from your Slack App OAuth settings)\n\nGive it a clear name like Slack Bot n8n\n\nChoose the workspace and save\n\nThen, in the Slack node, choose this credential from the dropdown.\n\n### Configure the message\nSet these parameters:\n\nOperation: Send\n\nSend Message To: Channel\n\nChannel: your Slack channel (e.g. #tous-n8n)\n\nMessage Type: Simple Text Message\n\nMessage template\nPaste the following inside the Message Text field:\n\n### Message template\n\nPaste the following inside the Message Text field: New task for {{ $json.name }}: *{{ $json[\"Titre\"] }}* \ud83d\udc49 Deadline: {{ $json[\"Date limite\"] }}\n\nExample output:\n\nNew task for Jeremy: Relancer fournisseur X \ud83d\udc49 Deadline: 2025-07-04\n\n### Test it\n\nClick Execute Node to verify the message is correctly sent in Slack.\n\nIf the formatting works, you\u2019re ready to run it on schedule \ud83d\ude80\n\n\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "e410705a-8699-44ba-b96e-04f31a4cc278",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        0
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "272efc44-5392-4be2-b7b8-14cdad2c3705",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        592
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "23279d09-8bf6-4597-a1df-dc453f1c4848",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        896
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "9f7bf328-d060-405f-9fad-6dcede5b6527",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        1200
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "edcedc95-904b-44c7-a5ef-0fe7d8cfd05d",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        -16
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "3fb08c64-6db5-42af-bf6b-867e32670124",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        272
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "39aa407a-8a79-48ae-b214-b103561c4171",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        576
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "28371bf0-d5e2-4e35-a9f0-3b8f093a6c78",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        880
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "ba6af6b5-6546-42a5-8251-b849d932a12c",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        1168
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "704e2757-8e9a-4200-a02c-15e66d2a5c40",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        1472
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "772d8436-b8d5-47ba-a731-0b9efa0853b9",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        1504
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "ff80ec3f-7997-4c0f-a779-a4b55a3c84aa",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        1792
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "ac435293-088d-4509-a9b6-a872b140570c",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        2096
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "0ed3d32c-5f6e-43a7-8867-a68d545380d7",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        1776
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "f39e5643-fb93-4aed-b4fa-602ee62a6ebc",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        2064
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "633dad3a-e4c3-4fab-bdea-38a773e2e669",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -288,
        2368
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "fcc26914-242c-4f40-b9a7-942c200a1ef3",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        2400
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    },
    {
      "id": "9fa16661-c2eb-42b7-a72a-b805e7f07852",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        992,
        272
      ],
      "parameters": {
        "width": 304,
        "height": 352,
        "content": "![gif](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExNzd2enJlYzhvcWpueWZmNDVidDY4Zm9pbTN1cmhnYmljcDZldDAzeSZlcD12MV9naWZzX3NlYXJjaCZjdT1n/JIX9t2j0ZTN9S/giphy.gif)\n"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "aad3affd-7a36-48be-a4d8-fb1d773da922",
  "connections": {
    "Search records": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Search records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Automate a Tally Form: Store with Airtable, Notify via Slack",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/5437",
    "scraped_at": "2025-08-21 02:21:21",
    "workflow_id": "f0241efc-d83c-5fe0-8d89-0dfb161a54bf"
  },
  "_filename": "Automate_a_Tally_Form_Store_with_Airtable_Notify_via_Slack.json"
}