{
  "id": "eFXzg1O4PWujvjQZ",
  "meta": {
    "instanceId": "c38e3b8a7e4240e6cdca062743f016c1029f385bf40345b6291939dfd83bfd77",
    "templateCredsSetupCompleted": true
  },
  "name": "31  Monitor Sales Pipeline Metrics",
  "tags": [],
  "nodes": [
    {
      "id": "df762772-ed58-47e6-b95c-cd75d399d230",
      "name": "\u26a1 Trigger: Start CRM Scraper",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -80,
        0
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "87a7f944-eb5f-4554-a296-83270d2069f5",
      "name": "\ud83d\udd17 Set Source URL (CRM/JSONPlaceholder)",
      "type": "n8n-nodes-base.set",
      "position": [
        120,
        0
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "7a1b9454-dbc2-4805-899b-268a0cfc2cdf",
              "name": "URL",
              "type": "string",
              "value": "https://jsonplaceholder.typicode.com/users"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "fb1472a0-27d2-4d73-ae55-7853ec9c7372",
      "name": "\ud83e\udd16 Monitor Sales Pipeline (CRM AI Agent)",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        400,
        0
      ],
      "parameters": {
        "text": "=You are a data analyst connected to Bright Data MCP scraping tool.\n\nScrape CRM-like sales data from this public API:\n{{ $json.URL }}\n\nTreat each user as a sales lead. For each entry, extract and simulate the following fields:\n\n{\n\"leadId\": <use id>,\n\"rep\": <use name>,\n\"stage\": <use username as deal stage>,\n\"value\": <convert address.zipcode to number and use as deal value>,\n\"status\": <use company.name to randomly assign status as \"open\", \"won\", or \"lost\">\n}\n\nThen:\n\nCalculate total number of leads\n\nTotal value of pipeline\n\nCount of leads in each stage\n\nCount of deals by status: open, won, lost\n\nIdentify top 3 reps based on simulated deal value",
        "options": {},
        "promptType": "define",
        "hasOutputParser": true
      },
      "typeVersion": 2
    },
    {
      "id": "f7aac7e3-10e8-4564-a634-391f5285e917",
      "name": "\ud83e\udde0 AI Brain ",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        300,
        260
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "kmqnyfHdWfA8k1KC",
          "name": "OpenAi account 3"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "9b888f4b-be89-43b1-819e-eafb3bb02643",
      "name": "\ud83c\udf10 Bright Data MCP",
      "type": "n8n-nodes-mcp.mcpClientTool",
      "position": [
        440,
        260
      ],
      "parameters": {
        "toolName": "scrape_as_markdown",
        "operation": "executeTool",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', ``, 'json') }}"
      },
      "credentials": {
        "mcpClientApi": {
          "id": "dGu6Ys11ijXSTxcV",
          "name": "MCP Client (STDIO) account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "83dfb033-a62e-47dc-bdea-be936f0534d9",
      "name": "\ud83e\udde9 Split Metrics for Sheet Rows",
      "type": "n8n-nodes-base.code",
      "position": [
        800,
        0
      ],
      "parameters": {
        "jsCode": "return (() => {\nconst result = [];\n\nconst data = items[0].json.output;\n\n// 1. Total Leads\nresult.push({\n\"Metric Type\": \"Summary\",\n\"Label\": \"Total Leads\",\n\"Value\": data.totalLeads\n});\n\n// 2. Total Pipeline Value\nresult.push({\n\"Metric Type\": \"Summary\",\n\"Label\": \"Total Value\",\n\"Value\": data.totalPipelineValue\n});\n\n// 3. Status Breakdown\nfor (const status in data.statusBreakdown) {\nresult.push({\n\"Metric Type\": \"Status Count\",\n\"Label\": status,\n\"Value\": data.statusBreakdown[status]\n});\n}\n\n// 4. Stage Breakdown\nfor (const stage in data.stageBreakdown) {\nresult.push({\n\"Metric Type\": \"Stage Count\",\n\"Label\": stage,\n\"Value\": data.stageBreakdown[stage]\n});\n}\n\n// 5. Top Reps\nfor (const rep of data.topReps) {\nresult.push({\n\"Metric Type\": \"Top Reps\",\n\"Label\": rep.rep,\n\"Value\": rep.totalValue\n});\n}\n\nreturn result.map(r => ({ json: r }));\n})();"
      },
      "typeVersion": 2
    },
    {
      "id": "bde8a138-5106-4278-b86a-a5b2e1719706",
      "name": "\ud83d\udcca Store CRM Insights (Google Sheet)",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1000,
        0
      ],
      "parameters": {
        "columns": {
          "value": {
            "Label": "={{ $json.Label }}",
            "Value": "={{ $json.Value }}",
            "Metric Type": "={{ $json['Metric Type'] }}"
          },
          "schema": [
            {
              "id": "Metric Type",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Metric Type",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Label",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Label",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Value",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Value",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "append",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1D8VmSbOUEf1jQWQ-_BaHVV_HOdb_d5DIyXzRSMlU5xs/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1D8VmSbOUEf1jQWQ-_BaHVV_HOdb_d5DIyXzRSMlU5xs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1D8VmSbOUEf1jQWQ-_BaHVV_HOdb_d5DIyXzRSMlU5xs/edit?usp=drivesdk",
          "cachedResultName": "Monitor Sales Pipeline Metrics"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "i899RBJ6SKiYYWwx",
          "name": "Google Sheets account"
        }
      },
      "typeVersion": 4.6
    },
    {
      "id": "d363f7ce-1ff8-4dd6-9517-aa0ffaa6dc32",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1620,
        -700
      ],
      "parameters": {
        "color": 4,
        "width": 1300,
        "height": 2700,
        "content": "# \ud83d\ude80 Smart CRM Scraper & Pipeline Health Analyzer (n8n + Bright Data + Google Sheets)\n\nThis automation workflow is perfect for sales ops, marketers, analysts, or even founders who want to:\n\n* \ud83d\udce5 Scrape sales pipeline data from CRM dashboards\n* \ud83d\udcca Get insights into reps, leads, and statuses\n* \ud83d\udcc1 Store it all in Google Sheets automatically \u2014 no copy/paste, no coding\n\nLet\u2019s break this into 3 simple sections \ud83d\udc47\n\n---\n\n\ud83d\udd37\u2002SECTION 1: Start & Set Target\n\ud83e\udde9 Combines these nodes:\n\n* \u26a1 Trigger: Start CRM Scraper\n* \ud83d\udd17 Set Source URL (CRM/JSONPlaceholder)\n\n\ud83d\udccc\u2002What Happens Here?\nThis section is where your automation begins. You:\n\n1. Manually run the workflow by clicking \u25b6\ufe0f \u201cExecute Workflow\u201d\n2. Define the website or CRM source you want to scrape\n\nExample:\n\n* You paste a mock CRM URL (e.g. [https://jsonplaceholder.typicode.com](https://jsonplaceholder.typicode.com)) \u2014 but in a real scenario, it could be a Bright Data-accessible CRM dashboard.\n\n\u2728 Benefits for Beginners:\n\u2705 No coding \u2014 just click + paste a URL\n\u2705 Easily swap out URLs for different CRM dashboards\n\u2705 Full control over when scraping starts\n\n\ud83c\udfaf Icons Summary:\n\u26a1 Manual Start | \ud83d\udd17 Source URL Setup\n\n\ud83d\udca1 Real-World Use:\nReplace the URL with a live CRM performance dashboard hosted inside Bright Data\u2019s mobile proxy network.\n\n---\n\n\ud83e\udd16\u2002SECTION 2: AI Agent \u2014 Scrape + Analyze\n\ud83e\udde9 Combines:\n\n* \ud83e\udd16 Monitor Sales Pipeline (CRM AI Agent)\n\n  * \ud83e\udde0 AI Brain (CRM Query Generator)\n  * \ud83c\udf10 Bright Data MCP (scrape\\_as\\_markdown)\n  * \ud83e\uddfe Clean JSON Parser (Pipeline Metrics)\n\n\ud83d\udccc\u2002What Happens Here?\n\nThis is the \u201cthinking\u201d part of the workflow.\n\n1. \ud83e\udde0 AI Brain: OpenAI understands the task. It generates instructions like:\n   \u2003\u201cScrape rep names, stages, leads, health from this CRM dashboard as markdown.\u201d\n\n2. \ud83c\udf10 Bright Data Tool: The MCP tool accesses the page invisibly (like a phone browser) and extracts pipeline data using its scrape\\_as\\_markdown tool.\n\n3. \ud83e\uddfe Structured Output Parser: Converts the scraped messy text into a structured JSON format like this:\n\n```json\n[\n  {\n    \"rep\": \"Alice\",\n    \"leads\": 22,\n    \"stage\": \"Proposal\",\n    \"status\": \"At Risk\"\n  },\n  ...\n]\n```\n\n\u2728 Benefits for Beginners:\n\u2705 Zero scraping code\n\u2705 Handles login-blocked or bot-protected CRMs via mobile proxies\n\u2705 Clean data format \u2014 easy to use in Sheets or dashboards\n\n\ud83c\udfaf Icons Summary:\n\ud83e\udde0 OpenAI Logic | \ud83c\udf10 Bright Data Scraper | \ud83e\uddfe JSON Cleaner\n\n\ud83d\udca1 Real-World Use:\nScrape weekly CRM dashboards from tools like HubSpot, Pipedrive, Salesforce (if routed via Bright Data), and turn them into structured performance data.\n\n---\n\n\ud83d\udfe8\u2002SECTION 3: Format & Store to Google Sheets\n\ud83e\udde9 Combines:\n\n* \ud83e\udde9 Split Metrics for Sheet Rows\n* \ud83d\udcca Store CRM Insights (Google Sheet)\n\n\ud83d\udccc\u2002What Happens Here?\n\n1. \ud83e\udde9 Split JSON: This node breaks the final structured output into individual items (one per sales rep), so each one becomes a row in your spreadsheet.\n\n2. \ud83d\udcca Google Sheet Node: Adds each row into a connected Google Sheet \u2014 storing columns like:\n\n| rep   | leads | stage     | status  |\n| ----- | ----- | --------- | ------- |\n| Alice | 22    | Proposal  | At Risk |\n| Bob   | 17    | Qualified | Healthy |\n\n\u2728 Benefits for Beginners:\n\u2705 Saves all CRM data automatically \u2014 no manual data entry\n\u2705 Compatible with Google Data Studio / Looker / Excel\n\u2705 Great for sharing with managers or teams\n\n\ud83c\udfaf Icons Summary:\n\ud83e\udde9 JSON Splitter | \ud83d\udcca Sheet Writer\n\n\ud83d\udca1 Real-World Use:\nUse it for live pipeline visibility. Sync Sheets with dashboards or reporting tools, or use for daily monitoring via automations.\n\n---\n\n\ud83d\udce6 Final Summary Table\n\n| Step       | Node Name                                 | Purpose                                      |\n| ---------- | ----------------------------------------- | -------------------------------------------- |\n| 1\ufe0f\u20e3 Input  | \u26a1 Trigger: Start CRM Scraper              | Manually trigger the workflow                |\n|            | \ud83d\udd17 Set Source URL (CRM/JSONPlaceholder)   | Define where to scrape the CRM data from     |\n| 2\ufe0f\u20e3 Agent  | \ud83e\udd16 Monitor Sales Pipeline (CRM AI Agent)  | Smart agent to analyze CRM                   |\n|            | \ud83e\udde0 AI Brain (CRM Query Generator)         | Creates scrape instructions                  |\n|            | \ud83c\udf10 Bright Data MCP (scrape\\_as\\_markdown) | Executes scrape via MCP mobile network       |\n|            | \ud83e\uddfe Clean JSON Parser (Pipeline Metrics)   | Converts scrape results into structured data |\n| 3\ufe0f\u20e3 Output | \ud83e\udde9 Split Metrics for Sheet Rows           | Breaks each record into its own row          |\n|            | \ud83d\udcca Store CRM Insights (Google Sheet)      | Saves data into Google Sheet row-by-row      |\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "3913ffe7-126f-4162-9533-286d9cb7e010",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        300,
        -1060
      ],
      "parameters": {
        "color": 5,
        "width": 420,
        "height": 1260,
        "content": "\ud83e\udd16\u2002SECTION 2: AI Agent \u2014 Scrape + Analyze\n\ud83e\udde9 Combines:\n\n* \ud83e\udd16 Monitor Sales Pipeline (CRM AI Agent)\n\n  * \ud83e\udde0 AI Brain (CRM Query Generator)\n  * \ud83c\udf10 Bright Data MCP (scrape\\_as\\_markdown)\n  * \ud83e\uddfe Clean JSON Parser (Pipeline Metrics)\n\n\ud83d\udccc\u2002What Happens Here?\n\nThis is the \u201cthinking\u201d part of the workflow.\n\n1. \ud83e\udde0 AI Brain: OpenAI understands the task. It generates instructions like:\n   \u2003\u201cScrape rep names, stages, leads, health from this CRM dashboard as markdown.\u201d\n\n2. \ud83c\udf10 Bright Data Tool: The MCP tool accesses the page invisibly (like a phone browser) and extracts pipeline data using its scrape\\_as\\_markdown tool.\n\n3. \ud83e\uddfe Structured Output Parser: Converts the scraped messy text into a structured JSON format like this:\n\n```json\n[\n  {\n    \"rep\": \"Alice\",\n    \"leads\": 22,\n    \"stage\": \"Proposal\",\n    \"status\": \"At Risk\"\n  },\n  ...\n]\n```\n\n\u2728 Benefits for Beginners:\n\u2705 Zero scraping code\n\u2705 Handles login-blocked or bot-protected CRMs via mobile proxies\n\u2705 Clean data format \u2014 easy to use in Sheets or dashboards\n\n\ud83c\udfaf Icons Summary:\n\ud83e\udde0 OpenAI Logic | \ud83c\udf10 Bright Data Scraper | \ud83e\uddfe JSON Cleaner\n\n\ud83d\udca1 Real-World Use:\nScrape weekly CRM dashboards from tools like HubSpot, Pipedrive, Salesforce (if routed via Bright Data), and turn them into structured performance data.\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "08dd1bdc-e20c-4d67-9d49-d4b8d98dd083",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        740,
        -700
      ],
      "parameters": {
        "color": 6,
        "width": 440,
        "height": 900,
        "content": "\ud83d\udfe8\u2002SECTION 3: Format & Store to Google Sheets\n\ud83e\udde9 Combines:\n\n* \ud83e\udde9 Split Metrics for Sheet Rows\n* \ud83d\udcca Store CRM Insights (Google Sheet)\n\n\ud83d\udccc\u2002What Happens Here?\n\n1. \ud83e\udde9 Split JSON: This node breaks the final structured output into individual items (one per sales rep), so each one becomes a row in your spreadsheet.\n\n2. \ud83d\udcca Google Sheet Node: Adds each row into a connected Google Sheet \u2014 storing columns like:\n\n| rep   | leads | stage     | status  |\n| ----- | ----- | --------- | ------- |\n| Alice | 22    | Proposal  | At Risk |\n| Bob   | 17    | Qualified | Healthy |\n\n\u2728 Benefits for Beginners:\n\u2705 Saves all CRM data automatically \u2014 no manual data entry\n\u2705 Compatible with Google Data Studio / Looker / Excel\n\u2705 Great for sharing with managers or teams\n\n\ud83c\udfaf Icons Summary:\n\ud83e\udde9 JSON Splitter | \ud83d\udcca Sheet Writer\n\n\ud83d\udca1 Real-World Use:\nUse it for live pipeline visibility. Sync Sheets with dashboards or reporting tools, or use for daily monitoring via automations.\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "4f470e7c-148e-4486-b15b-083bcef250af",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -120,
        -720
      ],
      "parameters": {
        "color": 3,
        "width": 400,
        "height": 920,
        "content": "\ud83d\udd37\u2002SECTION 1: Start & Set Target\n\ud83e\udde9 Combines these nodes:\n\n* \u26a1 Trigger: Start CRM Scraper\n* \ud83d\udd17 Set Source URL (CRM/JSONPlaceholder)\n\n\ud83d\udccc\u2002What Happens Here?\nThis section is where your automation begins. You:\n\n1. Manually run the workflow by clicking \u25b6\ufe0f \u201cExecute Workflow\u201d\n2. Define the website or CRM source you want to scrape\n\nExample:\n\n* You paste a mock CRM URL (e.g. [https://jsonplaceholder.typicode.com](https://jsonplaceholder.typicode.com)) \u2014 but in a real scenario, it could be a Bright Data-accessible CRM dashboard.\n\n\u2728 Benefits for Beginners:\n\u2705 No coding \u2014 just click + paste a URL\n\u2705 Easily swap out URLs for different CRM dashboards\n\u2705 Full control over when scraping starts\n\n\ud83c\udfaf Icons Summary:\n\u26a1 Manual Start | \ud83d\udd17 Source URL Setup\n\n\ud83d\udca1 Real-World Use:\nReplace the URL with a live CRM performance dashboard hosted inside Bright Data\u2019s mobile proxy network.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "b9e43f5f-eeb7-463b-8a68-2086acb14253",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1240,
        -700
      ],
      "parameters": {
        "color": 7,
        "width": 380,
        "height": 240,
        "content": "## I\u2019ll receive a tiny commission if you join Bright Data through this link\u2014thanks for fueling more free content!\n\n### https://get.brightdata.com/1tndi4600b25"
      },
      "typeVersion": 1
    },
    {
      "id": "23b951f8-8dd3-4e3b-b4e3-a5fc474ee033",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1620,
        -1060
      ],
      "parameters": {
        "color": 4,
        "width": 1300,
        "height": 320,
        "content": "=======================================\n            WORKFLOW ASSISTANCE\n=======================================\nFor any questions or support, please contact:\n    Yaron@nofluff.online\n\nExplore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n=======================================\n"
      },
      "typeVersion": 1
    },
    {
      "id": "4f1a9df8-f864-4d44-840b-80b9bc4f9e5e",
      "name": "Auto-fixing Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "position": [
        580,
        260
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "fba56334-ce0c-470b-b7ed-f62e96eab480",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        520,
        480
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "kmqnyfHdWfA8k1KC",
          "name": "OpenAi account 3"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "d4df16f4-12d0-4ce0-be84-744b0b861e5a",
      "name": "\ud83e\uddfe Clean JSON Parser ",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        700,
        480
      ],
      "parameters": {
        "jsonSchemaExample": "{\n\"totalLeads\": 10,\n\"totalPipelineValue\": 556281,\n\"statusBreakdown\": {\n\"open\": 3,\n\"won\": 4,\n\"lost\": 3\n},\n\"stageBreakdown\": {\n\"Bret\": 1,\n\"Antonette\": 1,\n\"Samantha\": 1,\n\"Karianne\": 1,\n\"Kamren\": 1,\n\"Leopoldo_Corkery\": 1,\n\"Elwyn.Skiles\": 1,\n\"Maxime_Nienow\": 1,\n\"Delphine\": 1,\n\"Moriah.Stanton\": 1\n},\n\"topReps\": [\n{\n\"rep\": \"Leanne Graham\",\n\"stage\": \"Bret\",\n\"totalValue\": 929983874\n},\n{\n\"rep\": \"Ervin Howell\",\n\"stage\": \"Antonette\",\n\"totalValue\": 905667771\n},\n{\n\"rep\": \"Clementine Bauch\",\n\"stage\": \"Samantha\",\n\"totalValue\": 595904157\n}\n]\n}"
      },
      "typeVersion": 1.3
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "72c19df5-d177-40b7-9390-21cfb599878c",
  "connections": {
    "\ud83e\udde0 AI Brain ": {
      "ai_languageModel": [
        [
          {
            "node": "\ud83e\udd16 Monitor Sales Pipeline (CRM AI Agent)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "\ud83c\udf10 Bright Data MCP": {
      "ai_tool": [
        [
          {
            "node": "\ud83e\udd16 Monitor Sales Pipeline (CRM AI Agent)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "\ud83e\uddfe Clean JSON Parser ": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "\ud83e\udd16 Monitor Sales Pipeline (CRM AI Agent)",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "\u26a1 Trigger: Start CRM Scraper": {
      "main": [
        [
          {
            "node": "\ud83d\udd17 Set Source URL (CRM/JSONPlaceholder)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "\ud83e\udde9 Split Metrics for Sheet Rows": {
      "main": [
        [
          {
            "node": "\ud83d\udcca Store CRM Insights (Google Sheet)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "\ud83d\udd17 Set Source URL (CRM/JSONPlaceholder)": {
      "main": [
        [
          {
            "node": "\ud83e\udd16 Monitor Sales Pipeline (CRM AI Agent)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "\ud83e\udd16 Monitor Sales Pipeline (CRM AI Agent)": {
      "main": [
        [
          {
            "node": "\ud83e\udde9 Split Metrics for Sheet Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Real-Time Sales Pipeline Analytics with Bright Data, OpenAI, and Google Sheets",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/5974",
    "scraped_at": "2025-08-21 03:38:12",
    "workflow_id": "6d14bb57-2100-54de-a4f7-9d27808efb26"
  },
  "_filename": "Real_Time_Sales_Pipeline_Analytics_with_Bright_Data_OpenAI_and_Google_Sheets.json"
}