{
  "id": "LNx1EFFvEQJChd2s",
  "meta": null,
  "name": "Gong Tool MCP Server",
  "tags": [],
  "nodes": [
    {
      "id": "fc8a547a-820b-4ab7-a4bd-05a63ed301f9",
      "name": "Workflow Overview 0",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1460,
        -240
      ],
      "parameters": {
        "width": 420,
        "height": 780,
        "content": "## \ud83d\udee0\ufe0f Gong Tool MCP Server\n\n### \ud83d\udccb Available Operations (4 total)\n\n**Call**: get, get all\n**User**: get, get all\n\n### \u2699\ufe0f Setup Instructions\n\n1. **Import Workflow**: Load this workflow into your n8n instance\n\n1. **\ud83d\udd11 Add Credentials**: Configure Gong Tool authentication in one tool node then open and close all others.\n2. **\ud83d\ude80 Activate**: Enable this workflow to start your MCP server\n3. **\ud83d\udd17 Get URL**: Copy webhook URL from MCP trigger (right side)\n4. **\ud83e\udd16 Connect**: Use MCP URL in your AI agent configurations\n\n### \u2728 Ready-to-Use Features\n\n\u2022 Zero configuration - all 4 operations pre-built\n\u2022 AI agents automatically populate parameters via `$fromAI()` expressions\n\u2022 Every resource and operation combination available\n\u2022 Native n8n error handling and response formatting\n\u2022 Modify parameter defaults in any tool node as needed\n\n### \ud83d\udcac Need Help?\nCheck the [n8n documentation](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolmcp/) or ping me on [discord](https://discord.me/cfomodz) for MCP integration guidance or customizations."
      },
      "typeVersion": 1
    },
    {
      "id": "52996676-e0e6-4f3f-a5b8-6be3f22eabfd",
      "name": "Gong Tool MCP Server",
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "position": [
        -660,
        -160
      ],
      "webhookId": "7ee72633-8849-4154-94cb-3e1aea112574",
      "parameters": {
        "path": "gong-tool-mcp"
      },
      "typeVersion": 1
    },
    {
      "id": "22b358d6-aa0d-4da6-9b34-a02aa0f98d2e",
      "name": "Get call",
      "type": "n8n-nodes-base.gongTool",
      "position": [
        -800,
        140
      ],
      "parameters": {
        "call": "={{ $fromAI('Call', ``, 'string') }}",
        "options": {},
        "operation": "get",
        "requestOptions": {}
      },
      "typeVersion": 1
    },
    {
      "id": "04f68211-ff29-420c-bb77-83420df39d50",
      "name": "Get many calls",
      "type": "n8n-nodes-base.gongTool",
      "position": [
        -580,
        140
      ],
      "parameters": {
        "limit": "={{ $fromAI('Limit', ``, 'number') }}",
        "filters": {},
        "options": {},
        "returnAll": "={{ $fromAI('Return_All', ``, 'boolean') }}",
        "requestOptions": {}
      },
      "typeVersion": 1
    },
    {
      "id": "05c98837-115e-40e5-a6ab-25d6e910ddab",
      "name": "Sticky Note 1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        120
      ],
      "parameters": {
        "color": 4,
        "width": 620,
        "height": 180,
        "content": "## Call"
      },
      "typeVersion": 1
    },
    {
      "id": "530d407e-8ccc-4c6f-b66c-3ba85cefdf7b",
      "name": "Get user",
      "type": "n8n-nodes-base.gongTool",
      "position": [
        -800,
        380
      ],
      "parameters": {
        "user": "={{ $fromAI('User', ``, 'string') }}",
        "resource": "user",
        "requestOptions": {}
      },
      "typeVersion": 1
    },
    {
      "id": "72301140-ed1b-48ad-b65b-a0ee4b40f543",
      "name": "Get many users",
      "type": "n8n-nodes-base.gongTool",
      "position": [
        -580,
        380
      ],
      "parameters": {
        "limit": "={{ $fromAI('Limit', ``, 'number') }}",
        "filters": {},
        "resource": "user",
        "operation": "getAll",
        "returnAll": "={{ $fromAI('Return_All', ``, 'boolean') }}",
        "requestOptions": {}
      },
      "typeVersion": 1
    },
    {
      "id": "9c83c5fc-79b2-4506-9bbe-7c971486d59a",
      "name": "Sticky Note 2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        360
      ],
      "parameters": {
        "color": 5,
        "width": 620,
        "height": 180,
        "content": "## User"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "shared": [
    {
      "role": "workflow:owner",
      "project": {
        "id": "G5fce9xGuBAsWBXe",
        "icon": null,
        "name": "David Ashby <david.ashby.lds@gmail.com>",
        "type": "personal",
        "createdAt": "2025-06-04T02:55:02.013Z",
        "updatedAt": "2025-06-04T02:56:01.361Z",
        "projectRelations": [
          {
            "role": "project:personalOwner",
            "user": {
              "id": "715c1c00-cb48-4712-9a32-f1f4b6db2b30",
              "role": "global:owner",
              "email": "david.ashby.lds@gmail.com",
              "disabled": false,
              "lastName": "Ashby",
              "settings": {
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1749357655581
                },
                "userActivated": true,
                "userActivatedAt": 1749075994495,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "3N3vVikZb3MckFYm"
              },
              "createdAt": "2025-06-04T02:55:01.745Z",
              "firstName": "David",
              "isPending": false,
              "updatedAt": "2025-06-08T04:40:58.399Z",
              "mfaEnabled": false,
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_n8n_version": "1.95.3",
                "personalization_survey_submitted_at": "2025-06-04T02:56:07.075Z"
              }
            },
            "userId": "715c1c00-cb48-4712-9a32-f1f4b6db2b30",
            "createdAt": "2025-06-04T02:55:02.013Z",
            "projectId": "G5fce9xGuBAsWBXe",
            "updatedAt": "2025-06-04T02:55:02.013Z"
          }
        ]
      },
      "createdAt": "2025-06-24T22:25:11.292Z",
      "projectId": "G5fce9xGuBAsWBXe",
      "updatedAt": "2025-06-24T22:25:11.292Z",
      "workflowId": "LNx1EFFvEQJChd2s"
    }
  ],
  "pinData": {},
  "settings": {
    "timezone": "America/New_York"
  },
  "createdAt": "2025-06-24T22:25:11.290Z",
  "updatedAt": "2025-06-24T22:25:39.000Z",
  "versionId": "5ea1c77f-f933-4207-b847-35cc86a89b2f",
  "isArchived": false,
  "staticData": null,
  "connections": {
    "Get call": {
      "ai_tool": [
        [
          {
            "node": "Gong Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get user": {
      "ai_tool": [
        [
          {
            "node": "Gong Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many calls": {
      "ai_tool": [
        [
          {
            "node": "Gong Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many users": {
      "ai_tool": [
        [
          {
            "node": "Gong Tool MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "triggerCount": 0,
  "_metadata": {
    "name": "Gong Tool MCP Server",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/5263",
    "scraped_at": "2025-08-21 03:28:43",
    "workflow_id": "2ed6f9e6-754d-5987-ae8a-843004cc1147"
  },
  "_filename": "Gong_Tool_MCP_Server.json"
}