{
  "id": "oDayLpms5q2aFCKw",
  "meta": {
    "instanceId": "d62d7a3fb314923e2cdedec19423e9669591b9c9c87901bc9332b7c59c101257"
  },
  "name": "Automatic AWS S3 to MinIO Backup",
  "tags": [],
  "nodes": [
    {
      "id": "8bfa470e-87dc-43eb-96ac-b5e382bae27c",
      "name": "Sticky Note37",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -112,
        624
      ],
      "parameters": {
        "color": 5,
        "width": 192,
        "height": 272,
        "content": "### Configure the Schedule Trigger to follow your needs"
      },
      "typeVersion": 1
    },
    {
      "id": "50efb63f-a9bd-4999-b3f8-70bed12adc26",
      "name": "Path Extraction",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        400,
        736
      ],
      "parameters": {
        "options": {},
        "fieldToSplitOut": "Key"
      },
      "typeVersion": 1
    },
    {
      "id": "4689dfef-ac4c-4c99-a65d-a4897cf7fd13",
      "name": "Objects Listing",
      "type": "n8n-nodes-base.awsS3",
      "position": [
        176,
        736
      ],
      "parameters": {
        "options": {
          "folderKey": "folder/"
        },
        "operation": "getAll",
        "returnAll": true,
        "bucketName": "yourBucket"
      },
      "credentials": {
        "aws": {
          "id": "MSMXVqVXTE3alClo",
          "name": "AWS account"
        }
      },
      "retryOnFail": true,
      "typeVersion": 2,
      "waitBetweenTries": 5000
    },
    {
      "id": "c6e517b0-65a0-4186-bcca-bbc718cfd7a4",
      "name": "Objects Download",
      "type": "n8n-nodes-base.awsS3",
      "position": [
        624,
        736
      ],
      "parameters": {
        "fileKey": "={{ $json.Key }}",
        "bucketName": "yourBucket"
      },
      "credentials": {
        "aws": {
          "id": "MSMXVqVXTE3alClo",
          "name": "AWS account"
        }
      },
      "retryOnFail": true,
      "typeVersion": 2,
      "waitBetweenTries": 5000
    },
    {
      "id": "e3cabe9c-9ec8-4ac9-bc9f-388fe795ab78",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -64,
        736
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 2,
              "triggerAtMinute": 15
            }
          ]
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "cefb5737-2946-4834-b8ed-5603c6af2d32",
      "name": "Upload objects on local MinIO",
      "type": "n8n-nodes-base.s3",
      "position": [
        848,
        736
      ],
      "parameters": {
        "fileName": "={{ $json.Key }}",
        "operation": "upload",
        "bucketName": "yourBucket",
        "additionalFields": {
          "parentFolderKey": "DestinationFolder"
        }
      },
      "credentials": {
        "s3": {
          "id": "p1G9A4UuSXaIH0xy",
          "name": "MinIO S3"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "16138a32-5c59-4aed-b324-6e9c12d33259",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        784,
        624
      ],
      "parameters": {
        "color": 5,
        "width": 224,
        "height": 288,
        "content": "### Link your MinIO Bucket and don't forget to specify the folder you want your backup to be in !"
      },
      "typeVersion": 1
    },
    {
      "id": "4502b0cb-9fe7-4901-93d9-993714a912c6",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        112,
        448
      ],
      "parameters": {
        "color": 4,
        "width": 640,
        "height": 256,
        "content": "### You'll need to configure an access to the AWS S3 Bucket you need to backup (with endpoint url,  access key and secret key) as well as a MinIO service running on your network (to configure locally with a S3 Node, use the url based on your service IP (http://XXX.XXX.XXX.XXX:9000) and both access and secret keys aswell). Also, in the credentials section of N8N, check 'Force Path Style' & 'Ignore SSL Issues (Insecure)' if MinIO is running on the local network. You're using Proxmox VE ? Create a MinIO LXC Container : https://community-scripts.github.io/ProxmoxVE/scripts?id=minio, it's easier !"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a69e97d1-1de4-4ed1-b602-57956aff57b7",
  "connections": {
    "Objects Listing": {
      "main": [
        [
          {
            "node": "Path Extraction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Path Extraction": {
      "main": [
        [
          {
            "node": "Objects Download",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Objects Download": {
      "main": [
        [
          {
            "node": "Upload objects on local MinIO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Objects Listing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "_metadata": {
    "name": "Automated AWS S3 to MinIO Object Backup with Scheduling",
    "used_count": 0,
    "popularity_score": 25,
    "source_url": "https://n8n.io/workflows/7284",
    "scraped_at": "2025-08-17 19:33:36"
  }
}